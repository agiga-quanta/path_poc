#__author__ = "Nghia Doan"
#__company__ = "Agiga Quanta Inc."
#__copyright__ = "Copyright 2021"
#__version__ = "0.1.0"
#__maintainer__ = "Nghia Doan"
#__email__ = "nghia71@gmail.com"
#__status__ = "Development"

[page]
split=[
        ['Paragraph 35', '\nDescription of Authorized'],
        ['Paragraph 35', '\nAuthorization Limitations']
    ]
footers=[
        {'func': 'p_tag_rem', 'ex': '^\s*$$'},
        {'func': 'p_tag_rem', 'ex': '^[^a-zA-Z]*$$'},
        {'func': 'p_tag_rem', 'ex': '^\-?\s*\d+\s*[\-|\*]\s*$$'},
        {'func': 'p_tag_rem', 'ex': 'Canada(\s+\.\.\/\d+.*)*$$', 'i': 'Da\.?te(\.| )of Issuance'},
    ]
headers=[
        {'func': 'p_tag_rem', 'ex': '^\s*$$'},
        {'func': 'p_tag_rem', 'ex': '^\-?\s*\d+\s*[\-|\*]\s*$$'},
        {'func': 'p_tag_rem', 'ex': '(Fisheries and (O|°)ceans )?(P|p)(ee?|fe|g|S|®|§)(ch|bl)es *e(t|l) (O|o)c(6|d|e|®)ans\n'},
        {'func': 'p_tag_etx', 'ex': 'DFO\s+File\s+No(\.|\,)\s*\:\s*(?P<dfo_file_no>.+)\nAuthorization\s+No\.\s*\:\s*(?P<authorization_no>.+)\n', 'to': ['dfo_file_no', 'authorization_no']},
        {'func': 'p_tag_etx', 'ex': 'DFO\s+File\s+No(\.|\,)\s*\:\s*(?P<dfo_file_no>.+)\n', 'to': ['dfo_file_no']},
        {'func': 'p_tag_etx', 'ex': 'Authorization\s+No\.\s*\:\s*(?P<authorization_no>.+)\n', 'to': ['authorization_no']},
        {'func': 'p_tag_etx', 'ex': 'PATH\s*No\.\s*\:?\s*(?P<path_no>.+)\n', 'to': ['path_no']},
        {'func': 'p_tag_etx', 'ex': '^(?P<path_no>\d+\-HCAA\-\d+)\n', 'to': ['path_no']},
        {'func': 'p_tag_etx', 'ex': 'Paragraph\s+((?!Fisheries).)*\s+Fisheries\s+Ac(t|i|\()\s+Authorization\s*\:\s*(?P<authorization_no>.+)\n', 'to': ['authorization_no']},
    ]
post_pr=[
        {'func': 'p_tag_sub', 'ex': ' ', 'to': ''},
    ]

[section]
st_name={ 
        'title': 10, 'proponent': 10, 'location': 10, 'description': 10, 'conditions': 10, 'limitations': 10, 'issuance': 10 
    }
cleaner=[
        {'func': 'p_tag_sub','ex': '^((\d)\s\.+)\s', 'to': r'\2. '},
        {'func': 'p_tag_sub','ex': '((\d+\.)+)([A-Z])', 'to': r'\1 \3'},
    ]
st_word=[
        {'func': 'p_tag_sec', 'ex': '(FISHERIES\s+ACT\s*((?!AUTHORIZATION).)*(AUTHORIZATION)?)|(Paragraphs? 34\.4\(2\)\(b\) and 35\(2\)\(b\) Fisheries Act Authorization)', 'to': 'title'},
        {'func': 'p_tag_sec', 'ex': 'Authorization\s+(I|i)ssued\s+to\:?\n?', 'to': 'proponent'},
        {'func': 'p_tag_sec', 'ex': 'Location\s+o(f|r)\s+Proposed\s+(Project|Development)', 'to': 'location'},
        {'func': 'p_tag_sec', 'ex': 'Description\s+of\s+Proposed\s+(Project|Development)', 'to': 'description'},
        {'func': 'p_tag_sec', 'ex': 'Conditions\s+of\s+Authorization', 'to': 'conditions'},
        {'func': 'p_tag_sec', 'ex': 'Authorization\s+Limitation(s|\*)\s+and\s+Application\s+Conditions', 'to': 'limitations'},
        {'func': 'p_tag_sec', 'ex': 'Da\.?(l|t)e(\.|\s+)of\s*(I|l)ssuan(ce)?\:?', 'to': 'issuance'},
    ]
st_post={
        'title': ['title', 's', 'title', 'e'],
        'proponent': ['proponent', 'e', 'location', 's'],
        'location': ['location', 'e', 'description', 's'],
        'description': ['description', 'e', 'conditions', 's'],
        'conditions': ['conditions', 'e', 'limitations', 's'],
        'limitations': ['limitations', 'e', 'issuance', 's'],
        'issuance': ['issuance', 's', None, None],
    }
st_subs=[
        {'func': 'p_tag_pos','ex': 'Valid Authorization Period for carrying', 'to': 'validity', 'from': 'location'},
    ]

[proponent]
correct=[
        {'func': 'p_tag_sub','ex': '(\s*\.?(\(|f|\{)\s*hereafter[^\)]+\)\s*)*\n( *Attention( +to)*(\:|\'.) *)*', 'to': '\n'},
        {'func': 'p_tag_sub','ex': '(Attn|Attentionn)\:\s*', 'to': ''},
        {'func': 'p_tag_sub','ex': 'Mr\.', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '([A-Z][0-9])\s([A-Z])\s([0-9][A-Z][0-9])', 'to': r'\1\2 \3'},
        {'func': 'p_tag_sub', 'ex': '(\s*The\s+)(City\s+of)', 'to': r' \2', 'c': True},
        {'func': 'p_tag_sub','ex': 'TheCity', 'to': 'City'},
        {'func': 'p_tag_sub','ex': 'JOA 1 BO', 'to': 'J0A 1B0'},
        {'func': 'p_tag_sub','ex': 'KOH 2H0', 'to': 'K0H 2H0'},
        {'func': 'p_tag_sub','ex': 'NOH 2P0', 'to': 'N0H 2P0'},
        {'func': 'p_tag_sub','ex': 'NOR 1 AO', 'to': 'N0R 1A0'},
        {'func': 'p_tag_sub','ex': 'ONN6E 1L3', 'to': 'ON N6E 1L3'},
        {'func': 'p_tag_sub','ex': 'NOP 1M0', 'to': 'N0P 1M0'},
        {'func': 'p_tag_sub','ex': 'NOG 1X0', 'to': 'N0G 1X0'},
        {'func': 'p_tag_sub','ex': 'NOG 2V0', 'to': 'N0G 2V0'},
        {'func': 'p_tag_sub','ex': 'NOG 2T0', 'to': 'N0G 2T0'},
        {'func': 'p_tag_sub','ex': 'POL ICO', 'to': 'P0L 1C0'},
        {'func': 'p_tag_sub','ex': 'PON 1H0', 'to': 'P0N 1H0'},
        {'func': 'p_tag_sub','ex': 'PI B 8L3', 'to': 'P1B 8L3'},
        {'func': 'p_tag_sub','ex': 'ROJ 1N0', 'to': 'R0J 1N0'},
        {'func': 'p_tag_sub','ex': 'ROK 2C0', 'to': 'R0K 2C0'},
        {'func': 'p_tag_sub','ex': 'ROG 2V0', 'to': 'R0G 2V0'},
        {'func': 'p_tag_sub','ex': 'ROM 1L0', 'to': 'R0M 1L0'},
        {'func': 'p_tag_sub','ex': 'TOL 2A0', 'to': 'T0L 2A0'},
        {'func': 'p_tag_sub','ex': 'TOL 2Z0', 'to': 'T0L 2Z0'},
        {'func': 'p_tag_sub','ex': 'TIC 1S6', 'to': 'T1C 1S6'},
        {'func': 'p_tag_sub','ex': 'TOL 1R0I', 'to': 'T0L 1R0'},
        {'func': 'p_tag_sub','ex': 'TOK 1WO', 'to': 'T0K 1W0'},
        {'func': 'p_tag_sub','ex': 'TOG 1E0', 'to': 'T0G 1E0'},
        {'func': 'p_tag_sub','ex': 'TIL 1K2', 'to': 'T1L 1K2'},
        {'func': 'p_tag_sub','ex': 'TOL 2BO', 'to': 'T0L 2B0'},
        {'func': 'p_tag_sub','ex': 'TOL OHO', 'to': 'T0L 0H0'},
        {'func': 'p_tag_sub','ex': 'T2P 2MS', 'to': 'T2P 2M5'},
        {'func': 'p_tag_sub','ex': 'X(0|O)A OHO', 'to': 'X0A 0H0'},
        {'func': 'p_tag_sub','ex': 'Director\, Ontario Waterways', 'to': 'Director of Ontario Waterways'},
        {'func': 'p_tag_sub','ex': 'Water Resources\s*\-\s*City of Calgary\s*', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': 'City of Calgary\s*(\-|\,)\s*Water Resources\s*', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': '(City of Calgary\s){2,}Water Resources', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': 'City of Calgary\s*\-\s*Transportation Infrastructure', 'to': 'City of Calgary\n Transportation Infrastructure'},
        {'func': 'p_tag_sub','ex': 'Station Waterloo', 'to': 'Station-Waterloo'},
        {'func': 'p_tag_sub','ex': 'Transportation and Community Planning Department', 'to': 'Transportation Community Planning Department'},
        {'func': 'p_tag_sub','ex': 'The City of Calgary\-Transportation Infrastructure', 'to': 'The City of Calgary, Transportation Infrastructure'},
        {'func': 'p_tag_sub','ex': 'Director of Infrastructure Services-Grant Murphy', 'to': 'Grant Murphy, Director of Infrastructure Services'},
        {'func': 'p_tag_sub','ex': 'Environment and Climate Change Canada', 'to': 'Environment Climate Change Canada'},
        {'func': 'p_tag_sub','ex': 'City of Winnipeg, Municipal Accommodations', 'to': 'City of Winnipeg Municipal Accommodations'},
        {'func': 'p_tag_sub','ex': 'Infrastructurthereafter', 'to': 'Infrastructure (hereafter'},
        {'func': 'p_tag_sub','ex': 'Trent-Sevem Waterway National Historic Site', 'to': 'Trent-Severn Waterway National Historic Site'},
        {'func': 'p_tag_sub','ex': 'Don Quest - Westmoreland Coal Company', 'to': 'Westmoreland Coal Company, Don Quest'},
        {'func': 'p_tag_sub','ex': 'P.Eng.', 'to': ''},
        {'func': 'p_tag_sub','ex': 'patrice\.deneault@tasfic\-nwgsc\. EC\.ca', 'to': 'patrice.deneault@tasfic-pwgsc.gc.ca'},
        {'func': 'p_tag_sub','ex': 'Jason Man\-', 'to': 'Jason Man'},
        {'func': 'p_tag_sub','ex': 'Marie\-lIeicncTurgeon', 'to': 'Marie-Helene Turgeon'},
        {'func': 'p_tag_sub','ex': 'Peter MaKula', 'to': 'Peter Makula'},
        {'func': 'p_tag_sub','ex': 'Rafea!Odie', 'to': 'Rafael Odie'},
        {'func': 'p_tag_sub','ex': '\(timber Osiowy', 'to': 'Kimber Osiowy'},
        {'func': 'p_tag_sub','ex': 'Environnemental', 'to': 'Environmental'},
        {'func': 'p_tag_sub','ex': '\,  \- Senior Project Engineer', 'to': ', Senior Project Engineer'},
        {'func': 'p_tag_sub','ex': 'P\.O\.\s*Box\s2100\,\s*S(i|t)n\.?\s*M\.?(\,?\s[^\n]+\n)', 'to': r'P.O. Box 2100, Station M\2\n'},
        {'func': 'p_tag_sub','ex': 'Bag (\d+)\-(\d+)', 'to': r'Bag \1, Box \2, '},
        {'func': 'p_tag_sub','ex': 'Bag\s+(\d+),\s+Box\s+(\d+)\s', 'to': r'Bag \1, Box \2, '},
        {'func': 'p_tag_sub','ex': '(Bag|Box) (\d+)([^\s])', 'to': r'\1 \2\3,'},
        {'func': 'p_tag_sub','ex': '(Bag|Box) (\d+)\.', 'to': r'\1 \2, '},
        {'func': 'p_tag_sub','ex': 'Tupper St\. south', 'to': 'Tupper St. South'},
        {'func': 'p_tag_sub','ex': 'Kennsington Road', 'to': 'Kensington Road'},
        {'func': 'p_tag_sub','ex': '1555, Peel St\.', 'to': '1555 Peel St.'},
        {'func': 'p_tag_sub','ex': 'Suite \d+\n401 (\- )?9th Avenue S\.W\.', 'to': r'Suite \1, 401 9th Avenue SW'},
        {'func': 'p_tag_sub','ex': 'Director, Generation', 'to': 'Director Generation'},
        {'func': 'p_tag_sub','ex': '3505 18\'\" Street SW', 'to': '3505 18 Street SW'},
        {'func': 'p_tag_sub','ex': '10909 27\s*\,h Street SE', 'to': '10909 27th Street SE'},
        {'func': 'p_tag_sub','ex': '159 Sir William Hearst Ave\.\, 2nd\. Floor', 'to': '2nd Floor, 159 Sir William Hearst Ave'},
        {'func': 'p_tag_sub','ex': '\n([^\n]+)\n(Suite 13, 4\"\' Floor)', 'to': r'\nSuite 13, 4th Floor, \1'},
        {'func': 'p_tag_sub','ex': '3\"1 Floor\, 909\-3 Avenue N', 'to': '3rd Floor, 909 3 Avenue N'},
        {'func': 'p_tag_sub','ex': '909\-3\"1 Avenue North', 'to': '909 3 Avenue N'},
        {'func': 'p_tag_sub','ex': '1544929|1470424', 'to': ''},
        {'func': 'p_tag_sub','ex': 'S”1 Ave SE', 'to': '3rd Ave SE'},
        {'func': 'p_tag_sub','ex': '(\d+), 2nd Street', 'to': r'\1 2nd Street'},
        {'func': 'p_tag_sub','ex': '91 l \-32nd Ave NE', 'to': '911 32nd Ave NE'}, 
        {'func': 'p_tag_sub','ex': '9621-96(\"\')? Ave(nue)?', 'to': r'9621 96 Avenue'},
        {'func': 'p_tag_sub','ex': '2611\-3rd Avenue SE', 'to': r'2611 3rd Avenue SE'},
        {'func': 'p_tag_sub','ex': '10909 27°’ Street SE', 'to': '10909 27th Street SE'},
        {'func': 'p_tag_sub','ex': '13477-116th Avenue', 'to': '13477 116th Avenue'},
        {'func': 'p_tag_sub','ex': '700, 324-8 Ave. SW', 'to': '700-324 8 Ave SW'},
        {'func': 'p_tag_sub','ex': '133\s*\-\s*6th Avenue SE', 'to': '133 6th Avenue SE'},
        {'func': 'p_tag_sub','ex': 'McLeod Trail', 'to': 'MacLeod Trail'},
        {'func': 'p_tag_sub','ex': '4920 51\*\' Street', 'to': '4920 51 Street'},
        {'func': 'p_tag_sub','ex': '93\, rue Arseneault', 'to': '93 rue Arseneault'},
        {'func': 'p_tag_sub','ex': '450(\.1st|\-1\*\'?) Street SW', 'to': '450 1st Street SW'},
        {'func': 'p_tag_sub','ex': '4429 \- 44\"\' Street', 'to': '4429 44 Street'},
        {'func': 'p_tag_sub','ex': '13477-116\'h Avenue', 'to': '13477 116th Avenue'},
        {'func': 'p_tag_sub','ex': '346 \- 3\* Street SE', 'to': '346 3 Street SE'},
        {'func': 'p_tag_sub','ex': '107\-3\"1 Street South', 'to': '107 3 Street South'},
        {'func': 'p_tag_sub','ex': '11-O-Gemma Street', 'to': '11 O\'Gemaa Street'},
        {'func': 'p_tag_sub','ex': '23rd\.', 'to': '23rd'},
        {'func': 'p_tag_sub','ex': 'John\-Counter', 'to': 'John Counter'},
        {'func': 'p_tag_sub','ex': '(Place du Portage),\s([^\n]+)\n', 'to': r'\2, Place-du-Portage, '},
        {'func': 'p_tag_sub','ex': 'Bowmanvillc', 'to': 'Bowmanville'},
        {'func': 'p_tag_sub','ex': 'Vaughn', 'to': 'Vaughan'},
        {'func': 'p_tag_sub','ex': 'Calgary AB', 'to': 'Calgary, AB'},
        {'func': 'p_tag_sub','ex': 'Surtey', 'to': 'Surrey'},
        {'func': 'p_tag_sub','ex': 'Thombury', 'to': 'Thornbury'},
        {'func': 'p_tag_sub','ex': '(City of Calgary\s){2,}', 'to': 'City of Calgary'},
    ]
extract=[
        {'func': 'p_tag_etx', 'ex': '(Phone\:\s)?(?P<phone>\(?\d{3}\)?(\-| )\d{3}\-\d{4})', 'to': ['phone']},
        {'func': 'p_tag_etx', 'ex': '(Fax\:\s)(?P<fax>\d{3}\-\d{3}\-\d{4})', 'to': ['fax']},
        {'func': 'p_tag_etx', 'ex': '(Email\:\s)?(?P<email>[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,})', 'to': ['email']},
        {'func': 'p_tag_etx', 'ex': '(?P<postcode>[A-Z][0-9][A-Z]\s[0-9][A-Z][0-9])', 'to': ['postcode']},
        {'func': 'p_tag_etx', 'ex': '(?P<postcode>[A-Z][0-9][A-Z]\s[0-9][A-Z][0-9])', 'to': ['postcode']},
        {'func': 'p_tag_etx', 'ex': '(?P<organization>((Corporation of )?(City|(the )?County|(the )?Town|Township|County|(The\s)*((Regional|Rural) )*Municipality)\s+of\s+(Calgary Water Resources|Barrie|Belleville|Black Diamond|Blue Mountains|Bradford West Gwillimbury|Bruce|Cardston|Cobourg|Cochrane|Dawn\-Euphemia|Durham|Edmonton|East St\. Paul|Fort MacLeod|Hamilton|Howick|Huron\-Kinloss|Innisfil|Iqaluit|Kingston|Kitchener|Medicine Hat|Niagara|Norfolk Treheme|North Perth|Oakville|Okotoks|Ontario Trap Rock|Ottawa|Oshawa|(Region of )?Peel|Quinte West|Peterborough|Portage la Prairie|Red Deer|Simcoe|Souris\-Glenwood|St\. Thomas|Rocky View County|Turner Valley|Two Borders|Vulcan|Waterloo|Wellington|Whitecourt|Winnipeg( Municipal Accommodations)?|York)|Municipal District of Foothills (No\. )?31|Government of Nunavut|Bruce County|Rural Municipality of Britannia no\. 502))', 'to': ['organization']},
        {'func': 'p_tag_etx', 'ex': '(?P<organization>(AltaLink|Alberta (Environment and Parks|Transportation)|Canadian(\s+Pacific\s+Railway|\sWildlife Service)|City of (Calgary|Red Deer Engineering Services)|Community and Government Services|Energy Ottawa Inc\.|Environment Climate Change Canada|Government of Nunavut|Infrastructure Services|MD of (Ranchland|Pincher Creek) No\.? (9|66)|Ontario Ministry of Natural Resources and Forestry|Parks(\s+and\s+Open\s+Spaces?|and Recreation Department|Planning and Development)|(Peguis|Long Plain) First Nation|Rainy River Project|Riding Mountain National Park of Canada|Toronto and Region Conservation Authority|Transportation Infrastructure|Trent( |\-)Severn Waterway( National Historic Site)?|SaskWater|Darlington Nuclear|St\. Catharines Hydro Inc\.|Ontario Limited|Engineering Services|Pickering Nuclear Generating Facility|Ontario Inc\.|Mattamy \(Mer Bleue\) Ltd\.|Waterfront Toronto|Goderich Port Management Corporation|Shadow Creek Resort|Capital Projects))', 'to': ['organization']},
        {'func': 'p_tag_etx', 'ex': '(?P<city>(Banff|\nBarrie|Belle River|Black Diamond|Bowmanville|Bradford|Brampton|Cedar Point|Cobourg|Cochrane|Downsview|East St\. Paul|Fort (McMurray|MacLeod)|Gatineau|Goderich|Hamilton|High Prairie|Hinton|Kingsey Falls|Lloydminster|Markham|Medicine Hat|Melita|Midhurst|Moose Jaw|Nanton|Newmarket|Okotoks|Onanole|Peace River|Peguis|Peterborough|Pickering|Portage La Prairie|Red Deer|Regina|Ripley|Rocky View County|South Porcupine|Stony Plain|St\. Catharines|St\. Thomas|Surrey|Thornbury|Thorold|Thunder Bay|Treheme|Vaughan|Val\-d’Or|Vulcan|Whitby))', 'to': ['city']},
        {'func': 'p_tag_etx', 'ex': '(?P<place>((\d+\-)?\d+\s(rue )?((\d+(st|nd|rd|th)?|Armour|Ashbumham|Arseneault|Barrie|Bay|Birds Hill|Broadway|Brier Park|Bristol Circle|Centre|Collier|Creswell|Dissette|Dufferin|Exchange|Exeter|Fairford|Garry|Garth|Highway 7|Hines|Innisfil Beach|James|John Counter|Kensington|King|Kipling|Lajeunesse|Lambton Line|Lexington|Lillydale|Laurier|Main|Manning|MacLeod Trail|Merivale|Mill|Moodie|Montgomery Park|Mountain River Estates|North Harbour|Oak|Ogden Dale|Old Deny|Ontario|Pacific|Park|Peel( Centre)?|Portage|Power|Queen|Ranchehouse|Rossland|Saghalie|Scotland|Sir William Hearst|St\. David\’s|Talbot|Tie|Tupper|Trafalgar|Upper Middle|Vansickle|Victoria|Wallace|Wasagaming|Wilson|Woolwich|Yonge)(\s+(Ave(nue)?|Blvd\.?|Court|Drive|Place|R(oa)?d\.?( Complex)?|St(reet|\.)?))?(\s+(North|South|East|West|NE|SE|N(W)?|S(W)?))?)))', 'to': ['place']},
        {'func': 'p_tag_etx', 'ex': '(?P<place>(\d+\s(Peel Centre Drive|Lillydale Avenue)))', 'to': ['place']},
        {'func': 'p_tag_etx', 'ex': '(?P<title>((A\/)?Chief Administrative Officer|Chief|Chief Administrative Officer|Construction Coordinator|(Regional )?Director\s*(of (Ontario Waterways|Physical Services)|Generation|Regulatory\, Mining\, Extraction \& Upgrading)?|(Drainage|Environmental)\sSuperintend(a|e)nt|Gen\. Supervisor of Special Projects|P\.\s* Eng.(\, M\.\s* Eng.)*|Project (Director|Officer)|Senior (Project|Reservoir Development) Engineer|System Manager Environmental Assessment|(Senior Vice )?President))', 'to': ['title']},
    ]
cleanup=[
        {'func': 'p_tag_sub','ex': '^(\s*\,|\s*Mr\.)*|\,\s+of\s+|(\s*\,\s*)+$$', 'to': ''},
        {'func': 'p_tag_sub','ex': ', Phone\:|The\,\,|c\/o|^\-, |^of$$', 'to': ''},
        {'func': 'p_tag_sub','ex': '\s*\,+', 'to': ','},
    ]

[location]
max_tag=5
correct=[
        {'func': 'p_tag_sub','ex': 'Big\sBuffalo\nLake\,', 'to': 'Big Buffalo Lake,'},
        {'func': 'p_tag_sub','ex': 'Municipality\,\sdistrict\,\stownship\,\scounty\;', 'to': 'Municipality, district, township, county:'},
        {'func': 'p_tag_sub','ex': 'Pump\nStation', 'to': 'Pump Station'},
        {'func': 'p_tag_sub','ex': 'Jaw River\nand Wascana', 'to': 'Jaw River and Wascana'},
        {'func': 'p_tag_sub','ex': 'OntarioProvince\:', 'to': 'Province: Ontario'},
        {'func': 'p_tag_sub','ex': 'Regional Municipality of DurhamProvince:', 'to': 'Regional Municipality of Durham\nProvince:'},
    ]
extract=[
        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> <province> <watercourse> <geo_location> <utm_coordinates> PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n(?P<utm_coordinates>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\:\nUTM\sCoordinates\:\n', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location', 'utm_coordinates']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <community> <municipality> <province> <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+waterbody\:\n(Longitude\s+and\s+latitude(\,\sUTM\sCoordinates)?|UTM\sCoordinates)\:\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>(.|\n)+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <geo_location> ((?!\d+N).)*\d+N(\n((?!\d+N).)*\d+N)* <community> <municipality> <province> <watercourse>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\s(?P<geo_location>((?!\d+N).)*\d+N(\n((?!\d+N).)*\d+N)*)\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <geo_location> ([^\n]|W)+ <community> <municipality> <province> <watercourse>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\s(?P<geo_location>([^\n]|W)+)\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; MAIN ---> <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+(\{|\()city\,\s+town\,\s*(or\s)?village\))?\:(?P<nearest_community>[^\n]+)\n(Municipality(\,\s+district\,\s+township\,\s+county)?|District)\:(?P<municipality>[^\n]+)?\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+water(course(\,\s+water\s*body|s)?|body)\:(?P<watercourse>(.|\n)+)\n(Longitude\s+and\s+latitude\:|(Latitude\,\sLongitude\s\()?Decimal Degrees\)?\:|Latitude(\,|\sand)\sLongitude(\sCoordinates)?\:|Location\:\sLatitude\sand\sLongitude(\,\sUTM\sCoordinates)?\:|Location\:\sUTM\sCoordinates\:|(Longitude\s+and\s+latitude(\,(\s+|\.)|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)?', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+\(city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse(\,\s+water\s*body|s)?\:(?P<watercourse>[^\n]+)\n(|Longitude\s+and\s+latitude\:|Location\:\sLatitude\sand\sLongitude\,\sUTM\sCoordinates\:|(Longitude\s+and\s+latitude(\,\s+|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> TERRITORY <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '(?P<place>(.+\n)+)?Nearest\s+community\s(\(city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\n(Municipality(\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\n)?Territory\:(?P<province>[^\n]+)\nName\s+of\s+(watercourse\,\s)?waterbody\:(?P<watercourse>[^\n]+)\n(Longitude\s+and\s+latitude\:|(Longitude\s+and\s+latitude(\,\s+|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': '(?P<place>(.+\n)+)?Nearest\s+community\:(?P<nearest_community>[^\n]+)\n(Municipality\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse\,\swaterbody\:(?P<watercourse>[^\n]+)\n(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <province>  <watercourse> <geo_location> <utm_coordinates>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\n(Upstream\sUTM Coordinates\:\nDownstream\s)?UTM\sCoordinates\:\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n(?P<utm_coordinates>[^\n]+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location', 'utm_coordinates']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <province>  <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\n(Latitude\sand\sLongitude|UTM)\sCoordinates\:\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; Simplified MAIN ---> <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\:(?P<nearest_community>[^\n]+)\nMunicipality\:(?P<municipality>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse\:(?P<watercourse>[^\n]+)\nLatitude\sand\slongitude\:(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <community> <municipality>  <province>  <watercourse> <geo_location> COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': '(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\nNearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY <community> MUNICIPALITY <municipality>  <province>  <watercourse> <geo_location> PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nUTM\sCoordinates\:\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY <community> MUNICIPALITY <municipality>  <province>  <watercourse> PROVINCE WATERCOURSE GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\sand\slatitude\,\sUTM\sCoordinates\:(?P<geo_location>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <geo_location> <province>  <watercourse> 
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+(\{|\()city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\nMunicipality(\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+water(course(\,\s+water\s*body|s)?|body)\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\n?(?P<geo_location>(.+\n)+)(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},
    ]
cleanup=[
        {'func': 'p_tag_sub', 'ex': '\\nCanada\s\.+\/\d+', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '\+\s+\*$$', 'to': ''},
    ]

[description]
correct=[
        {'func': 'p_tag_sub','ex': '(\\\|v)?vork(\(s\))?', 'to': r'work\2'},
        {'func': 'p_tag_sub','ex': 'workfs\)', 'to': 'work(s)'},
        {'func': 'p_tag_sub','ex': 'und(c|e)rtak(i|l)?(n|m)g', 'to': 'undertaking'},
        {'func': 'p_tag_sub','ex': 'ac(t|l)ivity\(ics\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'aclivity', 'to': 'activity'},
        {'func': 'p_tag_sub','ex': 'activity\'\,', 'to': 'activity,'},
        {'func': 'p_tag_sub','ex': 'activity\s\(ies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'activtty\(ics\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'acfivity\(ies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'acrivity\(ies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'nctivity\(ies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'actfvity\(ies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'activity\(ies\)f\s', 'to': 'activity(ies), '},
        {'func': 'p_tag_sub','ex': 'activity\(\sies\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'nctivity\(ics\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub','ex': 'arc\:', 'to': 'are:'},
        {'func': 'p_tag_sub','ex': 'Description\s+off', 'to': 'Description of'},
        {'func': 'p_tag_sub','ex': 'undertaking\(s\)\.', 'to': 'undertaking(s)'},        
        {'func': 'p_tag_sub','ex': 'undertaking\^\)', 'to': 'undertaking(s)'},
        {'func': 'p_tag_sub','ex': 'undertaking\^or', 'to': 'undertaking(s), or'},
        {'func': 'p_tag_sub','ex': 'undertaldng', 'to': 'undertaking'},
        {'func': 'p_tag_sub','ex': 'associated\.with\s+the\s+proposed', 'to': 'associated with the proposed'},
        {'func': 'p_tag_sub','ex': 'serious\sharm\sto\sOsh', 'to': 'serious harm to fish'},
        {'func': 'p_tag_sub','ex': 'serious\sbarm', 'to': 'serious harm'},
        {'func': 'p_tag_sub','ex': 'serious\sharm\stofish', 'to': 'serious harm to fish'},
        {'func': 'p_tag_sub','ex': 'serious\sharm\sto\sflsh', 'to': 'serious harm to fish'},
        {'func': 'p_tag_sub','ex': 'arelikely to result', 'to': 'are likely to result'},
        {'func': 'p_tag_sub','ex': '\,and\scovered\sby', 'to': ', and covered by'},
        {'func': 'p_tag_sub','ex': 'The\swotk', 'to': 'The work'},
        {'func': 'p_tag_sub','ex': 'Authorized \>work', 'to': 'Authorized work'},
        {'func': 'p_tag_sub','ex': 'Fisheries\s+and\s+Oceans\s+Canada\s+Pêches\s+et\s+Océans\s+Canada\s+\d+', 'to': ''},
        {'func': 'p_tag_sub','ex': 'follow\s+ing\simpacts', 'to': 'following impacts'},
        {'func': 'p_tag_sub','ex': '25(lh)? Avenue Bridge', 'to': '25th Avenue Bridge'},
    ]
commons={
    'proj_1': {'func': 'p_tag_sec','ex': 'The\s+proposed\s+(project\s+(of\s+which\s+the\s+works?\,\s+undertakings?\s+or\s+activit(y|ies)?\s+authorized\s+(is\s+a\s+part\s+(of\s+)?)?)?|development\s+impacting\s+fish\s+habitat\s+)involves\:?', 'to': 'proj'},
    'proj_2': {'func': 'p_tag_sec','ex': 'The\s+proposed\s+development\s+impacting\s+on\s+fish\s+(and\s+fish\s+)?habitat\s+involves\:', 'to': 'proj'},

    'auth_work_harm_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work(s|\(s\))?\,\s+undertaking(s|\(s\))?\,?\s+or\s+activit(ies|y(\(ies\))?)?\s+likely\s+to\s+result\s+in\s+serious\s*harm\s+to\s+fish(\s+and\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk)?', 'to': 'auth_work_harm'},
    'auth_work_harm_2': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\,\s+undertaking\s+or\s+activity\s+to\s+Fish\s+(and\s+Fish\s+)?Habitat', 'to': 'auth_work_harm'},

    'work_harm_1': {'func': 'p_tag_sec','ex': 'The work\(?s\)?,\s+undertaking\(?s\)?\,?\s*or\s+activit(y\()?ies\)?\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,?\s+(that|which)\s+(are|is)\s+likely\s+to\s+result\s+in\s+serious\s+harm\s+to\s+fish\,?\s+(and\s+(in\s+)?impacts\s+to\s+(aquatic\s+)?species\s+at\s+risk\,?\s+)?(are|is|include)(\:|;)', 'to': 'work_harm'},
    'work_harm_2': {'func': 'p_tag_sec','ex': 'Authorized\s+impacts\s+to\s+fish\s+(and\s+fish\s+)?habitat\s+resulting\s+from\s+the\s+carrying\s+on\s+of\s+a\s+work\, undertaking\s+or\s+activity\s+associated\s+with\s+the\s+proposed\s+development\s+described\s+above\s+include\:', 'to': 'work_harm'},

    'auth_work_habitat_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+the\s+harmful\s+alteration\,\s+disruption\s+or\s+destruction\s+of\s+fish\s+habitat\:', 'to': 'auth_work_habitat'},

    'work_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+the\s+harmful\s+alteration\,\s+disruption\s+or\s+destruction\s+of\s+fish\s+habitat\,\s+are\:', 'to': 'work_habitat'},

    'auth_act_habitat_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'auth_act_habitat'},
    'auth_act_habitat_2': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\,\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'auth_act_habitat'},

    'act_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\,\s+are\:', 'to': 'act_habitat'},
    'act_habitat_2': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\,\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'act_habitat'},

    'auth_fish_death_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+the\s+death\s+of\s+fish\s+by\s+means\s+other\s+than\s+fishing\:', 'to': 'auth_fish_death'},

    'fish_death_1': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+the\s+death\s+of\s+fish\s+by\s+means\s+other\s+than\s+fishing\,\s+are\:', 'to': 'fish_death'},

    'impact_harm_1': {'func': 'p_tag_sec','ex': 'The\s+serious\s+harm\s+to\s+fish\s+(and\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\s+)?likely\s+to\s+result\s+from\s+the\s+proposed\s+work(s|\(s\))?\,\s+undertaking(s|\(s\))?\,\s*or\s+activit(ies|y(\(ies\))?)?\,\s+and\s+covered\s+by\s+this\s+authorization\s+(includes|are)(\;|\:)?', 'to': 'impact_harm'},

    'impact_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+authorized\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+are\s+likely\s+to\s+result\s+in\s+the\s+following\s+impacts\s+to\s+fish\s+and\s+fish\s+habitat\:', 'to': 'impact_habitat'},

    'impact_species_1': {'func': 'p_tag_sec','ex': 'The\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\s+likely\s+to\s+result\s+from\s+the\s+proposed\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+and\s+covered\s+by\s+this\s+authorization\s+are\:', 'to': 'impact_species'},
    'impact_species_2': {'func': 'p_tag_sec','ex': 'The\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\s+likely\s+to\s+result\s+from\s+the\s+proposed\s+work\,\s+undertaking\,\s+or\s+activity\,\s+and\s+covered\s+by\s+this\s+authorization\s+includes\:', 'to': 'impact_species'},
    }
process=[
    {
        'extract': [ 'proj_1', 'auth_work_habitat_1', 'work_habitat_1', 'auth_act_habitat_1', 'act_habitat_1', 'impact_habitat_1', 'impact_species_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', 'impact_species', 's'],
            'impact_species': ['impact_species', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_harm_1', 'work_harm_1', 'auth_act_habitat_2', 'act_habitat_2', 'impact_harm_1', 'impact_species_2'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_harm', 's'],
            'impact_harm': ['impact_harm', 'e', 'impact_species', 's'],
            'impact_species': ['impact_species', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_habitat_1', 'work_habitat_1', 'auth_act_habitat_1', 'act_habitat_1', 'impact_habitat_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_fish_death_1', 'fish_death_1', 'auth_work_habitat_1', 'work_habitat_1', 'impact_habitat_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_fish_death', 's'],
            'auth_fish_death': ['auth_fish_death', 's', 'auth_fish_death', 'e'],
            'fish_death': ['fish_death', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_harm_1', 'work_harm_1', 'impact_harm_1', ],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'impact_harm', 's'],
            'impact_harm': ['impact_harm', 'e', None, None],
        },
    }, {
        'extract': [ 'auth_work_harm_1', 'work_harm_1', ],
        'position': {
            'proj': [None, None, 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', None, None],
        },
        'padding': 'proj',
    }, {
        'extract': [ 'auth_work_harm_1', 'work_harm_1', 'impact_harm_1', ],
        'position': {
            'proj': [None, None, 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'harm', 's'],
            'impact_harm': ['impact_harm', 'e', None, None],
        },
        'padding': 'proj'
    }, {
        'extract': [ 'proj_2', 'auth_work_harm_2', 'work_harm_2', ],
        'position': {
            'proj': ['proj', 'e', 'work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', None, None],
        },
    }
    ]
element={
        'proj': 10, 'auth_work_harm': 10, 'work_harm': 8, 'impact_harm': 10, 
        'auth_work_habitat': 10, 'work_habitat': 10, 'auth_act_habitat': 10, 'act_habitat': 10,
        'auth_fish_death': 10, 'fish_death': 10, 'impact_habitat': 10, 'impact_species': 10,
    }

[condition]
correct=[
        {'func': 'p_tag_sub','ex': '\n((I|J|\!|\])\s?\.|\.) (Conditions that relate to)', 'to': r'\n1. \3'},
        {'func': 'p_tag_sub','ex': '\n(\d)(\*|\s\.|\s?\,)? (Conditions that relate to)', 'to': r'\n\1. \3'},
        {'func': 'p_tag_sub','ex': '(\d) (\d) ([A-Z])', 'to': r'\1.\2. \3'},
        {'func': 'p_tag_sub','ex': '((\d+\.)+)([A-Z])', 'to': r'\1 \3'},
        {'func': 'p_tag_sub','ex': '(\d+(\.\d+)+)\s([A-Z])', 'to': r'\1. \3'},
        {'func': 'p_tag_sub','ex': '(\d+(\.\d+)+)\s([A-Z])', 'to': r'\1. \3'},
        {'func': 'p_tag_sub','ex': '(\d+(\.\d+)+)\s+', 'to': r'\1. '},
        {'func': 'p_tag_sub','ex': '(Conditions that relate to the period during which the work,\sundertaking or activity that will\nresult in serious harm to fish (or impacts to aquatic species at risk\s)?can be carried on\n)((1|I\s+)\.)', 'to': r'1. \1'},
        {'func': 'p_tag_sub','ex': '(Conditions that relate to measures and standards to avoid and mitigate serious harm to fish)(2\.)', 'to': r'\2 \1'},
        
    ]
extract=[
        {'func': 'p_tag_eta', 'ex': '\n(?P<bullet>((\d+\.)+)\s+)(?P<content>((?!\n(\d+\.)+)(.|\n))+)', 'to': ['bullet', 'content']},
    ]

[content]
html_path=/xhtml
json_path=/json
nlp_path=/nlp
summ_path=/txt
imag_path=/images

[gather]
as_is=[
        'header', 'proponent', 'location'
    ]
prefix='auth_'
label_map={
        'municipality': 'CITY',
        'nearest_community': 'CITY',
        'province': 'STATE_OR_PROVINCE',
        'geo_location': None,
    }

[pos]
; grammar=(\d+_JJ[R|S]?\s)?((\d+_(VB[G|N|D]?|NNS?(?!P)))(\s\d+_(HYPH|IN|POS))*\s)*\d+_NNS?(?!P)
grammar=(\d+_(JJ[R|S]?|CD)\s)?((\d+_(CD|VB[G|N|D]?|NNS?(?!P)))*\s)*\d+_(NNS?(?!P)|CD)
collect=(\d+)_(JJ|CD|VB\w?|NN\w?)
min_word=3

[summary]
summ_pcnt=0.2
imag_opts={
        '__DEFAULT__': { 'path': '', 'colormap': 'Dark2', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        '__TF__': { 'path': '/tf', 'colormap': 'Dark2', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'tab10': { 'path': '/opt_1', 'colormap': 'tab10', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'copper': { 'path': '/opt_2', 'colormap': 'copper', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'black': { 'path': '/default', 'colormap': 'viridis', 'background_color': 'black', 'width': 1600, 'height': 1200 },
    }

[corenlp]
url=http://stanford_nlp:9000/?properties={"outputFormat":"json"}