#__author__ = "Nghia Doan"
#__company__ = "Agiga Quanta Inc."
#__copyright__ = "Copyright 2021"
#__version__ = "0.1.0"
#__maintainer__ = "Nghia Doan"
#__email__ = "nghia71@gmail.com"
#__status__ = "Development"

[nlp_processor]
debug=1
url=http://stanford_nlp:9000/?properties={"outputFormat":"json"}
; url=http://localhost:9000/?properties={"outputFormat":"json"}

[spell_checker]
debug=1
ignore_pos_tags=[
        'CC', 'DT', 'IN', 'MD', 'RP', 'NNP',
    ]
lemma_to_ignore=[
        'aesrd', 'aemp', 'ah', 'aj', 'alia', 'amec', 'anyone', 'anytime', 'approx.', 'asl', 'assessible', 'atu',
        'backfil', 'backfill', 'backfilling', 'backwatering', 'baitfish', 'bankfull', 'baseflow', 'bedload', 'bf', 'bi-annual', 'bi-annually', 'bio', 'bio-bag', 'bioengineer', 'bioengineered', 'biophysical', 'bi-weekly', 'bpue', 'bouvier', 'brushlayer', 'bumpout', 
        'candu', 'ccme', 'centreline', 'ceqg', 'cerebralis', 'cpesc', 'cip', 'cleanout', 'clupeida', 'cn', 'cnmile', 'cnsc', 'coldwater', 'compensatory', 'consistant', 'copelandi', 'cosewic', 'cp', 'cpue', 'c.f', 'cribwall', 'csas', 'csp', 'cyprinida',
        'dataset', 'didson', 'dpcsp', 'degreaser', 'depositional', 'det', 'dewater', 'dewatering', 'dfo', 'dissipater', 'drawdown', 'dreissena', 'dufferin',
        'earthfill', 'easting', 'ebl', 'echosounder', 'edna', 'e-dna', 'electrofisher', 'electrofish', 'electrofishing', 'embeddedness', 'ender', 'entrainment', 'embedment', 'equivalency', 'erodible', 'esc', 'et', 'euthanize', 'exfiltration',
        'fascine', 'fds', 'finescale', 'fishway', 'flocculant', 'forb', 'forebay', 'freeboard', 'fyke',
        'gabion', 'geo', 'geofabric', 'geomorphic', 'geomorphologist', 'geotechnical', 'geotextile', 'georeference', 'gigawatt', 'gillnet', 'glyphosate', 'greenfield', 'graminoid', 'groundwater', 'gws', 'gwh', 
        'harriston', 'harvie', 'hcaa', 'headscarp', 'headpond', 'hec', 'hectar', 'heu', 'heus', 'hhsco', 'highfield', 'hotline', 'hpi', 'hwm', 'hwy', 'hydro', 'hydroacoustic', 'hydrogeologic', 'hydrologic', 'hydrological', 'hydropower', 
        'i&e', 'ifr', 'incrementally', 'infil', 'infill', 'infilling', 'instream', 'inwater', 'iu',
        'kpa',
        'lagg', 'laggan', 'lakebed', 'lakefill', 'landform', 'laydown', 'lifecycle', 'lifestage', 'loc', 'longnose', 'lpstp', 'lrt', 'lunker', 'lwd',
        'macroinvertebrate', 'macrophyte', 'mandrak', 'madtom', 'mainstem', 'mattamy', 'measureable', 'mesohabitat', 'mfrag', 'microhabitat', 'mid-channel', 'mid-level', 'mid-span', 'mid-spring', 'mid-summer', 'Mississaugas', 'mnrf', 'morphometry', 'mpe', 'multi-plate', 'multi-span', 'multi-pass', 'multi-year', 'muskeg', 'mw',
        'nearshore', 'non-acid', 'non-caliper', 'non-biodegradable', 'non-dispersive', 'non-earthen', 'non-erodible', 'non-functional', 'non-functioning', 'non-game', 'non-indigenous', 'non-invasive', 'non-lethal', 'non-limiting', 'non-native', 'non-permeable', 'non-piscivore', 'non-potable', 'non-sar', 'non-significant', 'non-species', 'non-viable', 'non-woven', 'northe', 'northing',
        'moecc', 'monopole', 'multi-stage',
        'offline', 'ohw', 'ogla', 'ogs', 'omnrf', 'onsite', 'otolith', 'overbank', 'over-excavate', 'over-wintering',
        'paramjit', 'parkette', 'pdf', 'pellucida', 'pend', 'per', 'periphyton', 'phragmite', 'phaser', 'pigtoe', 'piscivore', 'polymorpha', 'ponar', 'ponded', 'ponding', 'post', 'postconstruction', 'post-freshet', 'post-observation', 'post-planting', 'post-relocation', 'post-removal', 'post-closure', 'postflood', 'post-implementation', 'post-treatment', 'pngs', 'ppa', 'pre', 'pre-cast', 'preconstruction', 'pre-defined', 'pre-determined', 'pre-disturbance', 'pre-disturbed', 'pre-enhancement', 'pre-impact', 'pre-offsetting', 'pre-shoal', 'pre-treatment', 'proactively', 'preflood',
        'qaes', 'quadrat',
        'rap', 'rd.', 'realignment', 'reapply', 'rebar', 'recoat', 're-channelization', 'recolonize', 'recolonization', 'reconfiguration', 'reconnect', 'reconnection', 're-contour', 're-contoured', 're-contouring', 'redd', 'redirection', 're-direction', 're-enforce', 're-entry', 'reestablishment', 're-excavation', 'reflood', 'reflooding', 'regrade', 'regrading', 're-growth', 're-instate', 'reinstallation', 're-naturalize', 're-position', 'rheotactic', 're-run', 're-stabilize', 're-stock', 're-seed', 're-install', 're-isolate', 're-profile', 're-sloping', 're-suspend', 're-suspended', 'revegetate', 'revegetated', 're-vegetation', 'revegetation', 'reveget', 're-use', 're-water', 'rfi', 'riprap', 'riprapp', 'riverine', 'riverstone', 'roadwork', 'rov', 'rm', 'rockfill', 'rootwad', 'r.s.c.', 'rsi',
        'saugeen', 'sar', 'sci.', 'sealift', 'shorewall', 'sideroad', 'siltation', 'simcoe', 'snc', 'snowmelt', 'snye', 'sox', 'sp.', 'spcsp', 'spl', 'st.clair', 'sta', 'sta.', 'stigmosus', 'stoplog', 'stormwater', 'streambank', 'sub-area', 'subcut', 'sub-drain', 'submergent', 'subproject', 'subsample', 'subtidal', 'successional', 'sucetta', 'survivability', 'survivorship', 'swcrr', 'swm', 'swsp',
        't&c', 'tailwater', 'tf', 'tfa', 'timeframe', 'tma', 'tmf', 'trca',
        'uncontained','underperformance', 'understory', 'unenhanced', 'unimpact', 'unimpacted', 'unwatering', 'upslope', 'upwelling', 'utm',
        'valiev', 'videography', 'veliger',
        'waterbody', 'watermain', 'westslope', 'whenever', 'whereby', 'wherein', 'whichever', 'wingwall', 'wms', 'woodlot', 'worksite', 'wpd',
        'yoy'
    ]
regex_to_ignore=[
        {'func': 'p_tag_src', 'ex': '[A-Z][0-9][A-Z]\s[0-9][A-Z][0-9]'},
        {'func': 'p_tag_src', 'ex': '\d+((\.\d+)+\.?)*'},
    ]

[text_corrector]
debug=1
page_no=[
        {'func': 'p_tag_src', 'ex': '^( *\- *|\. *)?(\d+|t)( *\- *)?$$'},
        {'func': 'p_tag_src', 'ex': '^[ \.„]+/\d+$$'},
        {'func': 'p_tag_src', 'ex': '^/\d+[ •\+\*\']*(\d+|M)?$$'},
        {'func': 'p_tag_src', 'ex': '^/\d+[ •\+\*]+m[ •\+\*]+$$'},
        {'func': 'p_tag_src', 'ex': '^/\d+[ •\+\*«]+t?$$'},
        {'func': 'p_tag_src', 'ex': '^\.+/\d+$$'},
        {'func': 'p_tag_src', 'ex': '^\.+( *\.+)\d+$$'},
        {'func': 'p_tag_src', 'ex': '^\.+ *,/\d+$$'},
        {'func': 'p_tag_src', 'ex': '^(\.|,)[A-Z]\d+$$'},
        {'func': 'p_tag_src', 'ex': '^\, *\- *\, */\d+$$'},
        {'func': 'p_tag_src', 'ex': '^Canad(a|\'at?|ci|S)[ \.\+\*/„,•#0-9]+(fS|M)?$$'},
        {'func': 'p_tag_src', 'ex': '^Canad\'?ai?[ \.\,]+[A-Z][0-9]$$'},
        {'func': 'p_tag_src', 'ex': '^Canad(\'|S)?a(f|i)?$$'},
        {'func': 'p_tag_src', 'ex': '^[0-9]{2}$$'},
        {'func': 'p_tag_src', 'ex': '^Page ?\d+ *of \d+$$'},
        {'func': 'p_tag_src', 'ex': '^(\{if| |\-|»|\n|\.|\:|•+|\d»|\d\n|~|\'|\*|[A-Za-z])$$'},
    ]
correctors=[
        # postcode
        {'func': 'p_tag_sub','ex': 'JOA 1 BO', 'to': 'J0A 1B0'},
        {'func': 'p_tag_sub','ex': '(K|N)O([A-Z]) ([0-9][A-Z][0-9])', 'to': r'\g<1>0\g<2> \g<3>'},
        {'func': 'p_tag_sub','ex': 'NO([A-Z]) ([0-9][A-Z][0-9])', 'to': r'N0\g<1> \g<2>'},
        {'func': 'p_tag_sub','ex': 'NOR 1 AO', 'to': 'N0R 1A0'},
        {'func': 'p_tag_sub','ex': 'ONN6E 1L3', 'to': 'ON N6E 1L3'},
        {'func': 'p_tag_sub','ex': 'PO([A-Z]) ([0-9][A-Z][0-9])', 'to': r'P0\g<1> \g<2>'},
        {'func': 'p_tag_sub','ex': 'PI B 8L3', 'to': 'P1B 8L3'},
        {'func': 'p_tag_sub','ex': 'POL ICO', 'to': 'P0L 1C0'},
        {'func': 'p_tag_sub','ex': 'RO([A-Z]) ([0-9][A-Z][0-9])', 'to': r'R0\g<1> \g<2>'},
        {'func': 'p_tag_sub','ex': 'TIC 1S6', 'to': 'T1C 1S6'},
        {'func': 'p_tag_sub','ex': 'TOL 1R0I', 'to': 'T0L 1R0'},
        {'func': 'p_tag_sub','ex': 'TIL 1K2', 'to': 'T1L 1K2'},
        {'func': 'p_tag_sub','ex': 'T2P 2MS', 'to': 'T2P 2M5'},
        {'func': 'p_tag_sub','ex': 'T2P 5H 1', 'to': 'T2P 5H1'},
        {'func': 'p_tag_sub', 'ex': 'TOG ([0-9][A-Z][0-9])', 'to': r'T0G \g<1>'},
        {'func': 'p_tag_sub', 'ex': 'TOK ([0-9][A-Z][0-9])', 'to': r'T0K \g<1>'},
        {'func': 'p_tag_sub', 'ex': 'TOL ([0-9][A-Z][0-9])', 'to': r'T0L \g<1>'},
        {'func': 'p_tag_sub', 'ex': 'TOL ([0-9][A-Z])O', 'to': r'T0L \g<1>0'},
        {'func': 'p_tag_sub', 'ex': 'TOL O([A-Z][0-9])', 'to': r'T0L 0\g<1>'},
        {'func': 'p_tag_sub', 'ex': 'TOL ([0-9][A-Z])O', 'to': r'T0L \g<1>0'},
        {'func': 'p_tag_sub', 'ex': 'TOL O([A-Z])O', 'to': r'T0L 0\g<1>0'},
        {'func': 'p_tag_sub', 'ex': 'T([0-9]) ([A-Z]) ([0-9][A-Z][0-9])', 'to': r'T\g<1>\g<2> \g<3>'},
        {'func': 'p_tag_sub','ex': 'X(0|O)A OHO', 'to': 'X0A 0H0'},        
        # bullets    
        {'func': 'p_tag_sub', 'ex': '(\d+(\.\d+)+)([A-Z])', 'to': r'\g<1>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '((\d+\.)+)([A-Z])', 'to': r'\g<1> \g<3>'},
        # words
        {'func': 'p_tag_sub', 'ex': 'de\-(construction|water)', 'to': r'de\g<1>'},
        {'func': 'p_tag_sub', 'ex': 'non\-(toxic|uniform)', 'to': r'non\g<1>'},
        {'func': 'p_tag_sub', 'ex': '(post|pre)\-(construction|flood)', 'to': r'\g<1>\g<2>'},
        {'func': 'p_tag_sub', 'ex': 're\-(align|appl|build|construct|deploy|distribut|establish|flood|grad|shap|vegetate)', 'to': r're\g<1>'},
        {'func': 'p_tag_sub', 'ex': '(un)\-(impac)', 'to': r'\g<1>\g<2>'},
        # split
        {'func': 'p_tag_sub', 'ex': '(Act\.|and|are|Calgary|fish|for|from|live|mark|of|PATH|the|to|To|trash|warm|Year)(Authorization|Element|Explosives|fish|From|habitat|likely|mitigation|Monitoring|mussels|No\.|Oceans|October|Offsetting|Parks|rack|R\.S\.C\.|stakes|Trembling|water)', 'to': r'\1 \2'},
        {'func': 'p_tag_sub', 'ex': '(activities|allow|area|authorization|bank|below|complete|conditions?|constructed|Creek|diversity|erosion|etc|facilities|Guideline|habitat|kill|mark|meters|met|occurs|Offsetting|onsite|period|Plan|platforms|piers|pond|possible|programs|proposed|pump|RAP|repair(ed|s)|required|restoration|results|RPM|shoal|site|size|Sr|stabilized|structures|successful|time|up|watercourse|works|year|zone)\.(Additional|All|Any|Cleared|Contingency|DFO|Each|Egg|Fisheries|Generating|Only|Monitoring|Nets|Pumps|shall|Reports|Temporary|The|These|They|This|Twenty|Updates|Water|Where)', 'to': r'\1. \2'},
        {'func': 'p_tag_sub', 'ex': '(fish)(by)(means)', 'to': r'\1 \2 \3'},
        # misspelled
        {'func': 'p_tag_sub', 'ex': '(\d+) (mz|mJ|nf|nr|irf)', 'to': r'\g<1> m2'},
        {'func': 'p_tag_sub', 'ex': 'mean discharge \(nr */s\)', 'to': 'mean discharge (m3/s)'},
        {'func': 'p_tag_sub', 'ex': '(\d+) m\. ', 'to': r'\g<1> meters. '},
        {'func': 'p_tag_sub', 'ex': '(\d+)\.(\d+) m\. ', 'to': r'\g<1>.\g<2> meters. '},
        {'func': 'p_tag_sub', 'ex': '(\d+)\.(\d+) m\.([^ ])', 'to': r'\g<1>.\g<2> meters. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(\d+)\,(\d+) (mz|mJ|nr|nf|irf)', 'to': r'\g<1>,\g<2> m2'},
        {'func': 'p_tag_sub', 'ex': '(\d+)\,\!(\d+) m2', 'to': r'\g<1>,1\g<2> m2'},
        {'func': 'p_tag_sub', 'ex': '(\d+) m\!of', 'to': r'\g<1> m2 of'},
        {'func': 'p_tag_sub', 'ex': '(\d+)(\,(\d+))? *°C', 'to': r'\g<1>\g<2> degrees Celcius'},
        {'func': 'p_tag_sub', 'ex': '(\d+)(\,(\d+))? *°F', 'to': r'\g<1>\g<2> degrees Fahrenheit'},
        {'func': 'p_tag_sub', 'ex': 'Authorization No. : £', 'to': r'Authorization No. : 1'},
        {'func': 'p_tag_sub', 'ex': '(1|l)OOdb', 'to': '100 dB'},
        {'func': 'p_tag_sub', 'ex': '([1-5])\s*(\.|\,) (Conditions that relate to)', 'to': r'\g<1>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(^|\n)(I|J)\s*\. (Conditions that relate to)', 'to': r'\g<1>1. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '^\. (Conditions that relate to)', 'to': r'1. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '(1|5) (Conditions that relate to the period during which the work)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(3|5) (Conditions that relate to monitoring and reporting)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': 'S\. (Conditions that relate to monitoring and reporting)', 'to': r'5. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '(4) (Conditions that relate to offsetting)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(4|6) (Conditions that relate to the offsetting )(of|for)( the serious harm)', 'to': r'\g<1>. \g<2>\g<3>\g<4>'},
        {'func': 'p_tag_sub', 'ex': '(4)\,(3) (Offsetting criteria to assess)', 'to': r'\g<1>.\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(1) (2) (The Proponent)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(5)\,(2) (The Proponent)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(5\.2), (List of reports)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(5)\,(2) (List of reports)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(3)A (Monitoring of avoidance and mitigation)', 'to': r'\g<1>.1. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(3)(2) (Other monitoring and reporting)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(4)\*(2) (Scale and description)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(5\.1)\,(1\.5) (If one or more)', 'to': r'\g<1>.\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '000 m3of', 'to': '000 m3 of'},
        {'func': 'p_tag_sub', 'ex': '909-3rd Avenue North', 'to': '909 3rd Avenue North'},
        {'func': 'p_tag_sub', 'ex': '2\.2\,9 (Materials used)', 'to': r'2.2.9. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '2\,2\.10 (The use of explosives)', 'to': '2.2.10. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '(9\.2\.8\.2 of the Application\.)( Should spilling be required)', 'to': r'\g<1>\n2.9.1 \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(section)\n(9\.2\.2 of)', 'to': r'\g<1> \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2\.12)\, (As per)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2)\,(16\. Contingency)', 'to': r'\g<1>.\g<2>'},
        {'func': 'p_tag_sub', 'ex': '2\.23 (The Proponen)fsHall', 'to': r'2.2.3. \g<1>t shall'},
        {'func': 'p_tag_sub', 'ex': '2\.2\.62', 'to': '2.2.6.2'},
        {'func': 'p_tag_sub', 'ex': '35\(2X6\)', 'to': '35(2)(b)'},
        {'func': 'p_tag_sub', 'ex': '223669\.pdn', 'to': '223669.pdf'},
        {'func': 'p_tag_sub', 'ex': 'west side 119 m ', 'to': 'west side 119 m2'},
        {'func': 'p_tag_sub', 'ex': 'abscncc', 'to': 'absence'},
        {'func': 'p_tag_sub', 'ex': 'aclivity|activtty|acfivity|acrivity|nctivity', 'to': 'activity'},
        {'func': 'p_tag_sub', 'ex': 'activity\( +ies\)|activity +\(ies\)', 'to': 'activity(ies)'},        
        {'func': 'p_tag_sub', 'ex': 'afier', 'to': 'after'},
        {'func': 'p_tag_sub', 'ex': 'approach lo', 'to': 'approach to'},
        {'func': 'p_tag_sub', 'ex': 'armourstone', 'to': 'armour stone'},
        {'func': 'p_tag_sub', 'ex': 'accuracy ofH', 'to': 'accuracy of +'},
        {'func': 'p_tag_sub', 'ex': 'activity\(ics\)', 'to': 'activity(ies)'},
        {'func': 'p_tag_sub', 'ex': '(Authorizalion|Authorization)No', 'to': 'Authorization No'},
        {'func': 'p_tag_sub', 'ex': 'Autiiorization', 'to': 'Authorization'},
        {'func': 'p_tag_sub', 'ex': ' Act\.A ', 'to': ' Act. A '},
        {'func': 'p_tag_sub', 'ex': 'Agc\+ 1', 'to': 'Age 1+'},
        {'func': 'p_tag_sub', 'ex': 'associated\.with', 'to': 'associated with'},
        {'func': 'p_tag_sub', 'ex': 'bridge\.', 'to': 'bridge '},
        {'func': 'p_tag_sub', 'ex': 'b\.Downstream', 'to': 'b. Downstream'},
        {'func': 'p_tag_sub', 'ex': 'by this authorization arc\:', 'to': 'by this authorization are:'},
        {'func': 'p_tag_sub', 'ex': '(by|from|to)(March)', 'to': r'\g<1> \g<2>'},
        {'func': 'p_tag_sub', 'ex': 'cany on', 'to': 'carry on'},
        {'func': 'p_tag_sub', 'ex': 'c\.g\.', 'to': 'e.g.'},
        {'func': 'p_tag_sub', 'ex': 'Catostonms', 'to': 'Catostomus'},
        {'func': 'p_tag_sub', 'ex': 'cerebralisis', 'to': 'cerebralis'},
        {'func': 'p_tag_sub', 'ex': 'complete\.A', 'to': 'complete. A'},
        {'func': 'p_tag_sub', 'ex': 'constniction', 'to': 'construction'},
        {'func': 'p_tag_sub', 'ex': 'condition lof this', 'to': 'condition of this'},
        {'func': 'p_tag_sub', 'ex': 'cofferedams', 'to': 'cofferdams'},
        {'func': 'p_tag_sub', 'ex': 'Continjtency\.meas\.ures', 'to': 'Contingency measures'},
        {'func': 'p_tag_sub', 'ex': 'cyrprinidae', 'to': 'cyprinidae'},
        {'func': 'p_tag_sub', 'ex': 'CDreissena polymorpha \)', 'to': '(Dreissena polymorpha)'},
        {'func': 'p_tag_sub', 'ex': 'Dates bv which', 'to': 'Dates by which'},
        {'func': 'p_tag_sub', 'ex': '(December|October) lsl', 'to': r'\g<1> 1st'},
        {'func': 'p_tag_sub', 'ex': 'destructior', 'to': 'destruction'},
        {'func': 'p_tag_sub', 'ex': 'Description off Authorized work', 'to': 'Description of Authorized work'},
        {'func': 'p_tag_sub', 'ex': 'DFQ', 'to': 'DFO'}, 
        {'func': 'p_tag_sub', 'ex': 'DFO Fite No', 'to': 'DFO File No'},
        {'func': 'p_tag_sub', 'ex': 'difiuser', 'to': 'diffuser'},
        {'func': 'p_tag_sub', 'ex': 'drawings\.Coffer dams', 'to': 'drawings. Cofferdams'},
        {'func': 'p_tag_sub', 'ex': 'the diy', 'to': 'the dry'},
        {'func': 'p_tag_sub', 'ex': 'Encl-of-Pipe', 'to': 'End-of-Pipe'},
        {'func': 'p_tag_sub', 'ex': 'electroftshing', 'to': 'electrofishing'},
        {'func': 'p_tag_sub', 'ex': ' et al\.y (\d+)', 'to': r' et alia year \g<1>'},
        {'func': 'p_tag_sub', 'ex': ' et al\.', 'to': ' et alia'},
        {'func': 'p_tag_sub', 'ex': 'eg\.', 'to': 'e.g.'},
        {'func': 'p_tag_sub', 'ex': 'entirty', 'to': 'entire'},
        {'func': 'p_tag_sub', 'ex': 'exceipts', 'to': 'excerpts'},
        {'func': 'p_tag_sub', 'ex': 'extension oT the', 'to': 'extension of the'},
        {'func': 'p_tag_sub', 'ex': 'equal or belter', 'to': 'equal or better'},
        {'func': 'p_tag_sub', 'ex': 'February lof', 'to': 'February of'},
        {'func': 'p_tag_sub', 'ex': 'fonm of terrestrial', 'to': 'form of terrestrial'},
        {'func': 'p_tag_sub', 'ex': 'FiJe', 'to': 'File'},
        {'func': 'p_tag_sub', 'ex': 'fisli|ftsh|flsh', 'to': 'fish'},
        {'func': 'p_tag_sub', 'ex': ' fisheiy', 'to': ' fishery'},
        {'func': 'p_tag_sub', 'ex': 'fish habitat\.\-o', 'to': 'fish habitat.\no'},
        {'func': 'p_tag_sub', 'ex': 'fiy', 'to': 'fry'},
        {'func': 'p_tag_sub', 'ex': 'fiirther', 'to': 'further'},
        {'func': 'p_tag_sub', 'ex': 'fotlowed', 'to': 'followed'},
        {'func': 'p_tag_sub', 'ex': 'follow ing', 'to': 'following'},
        {'func': 'p_tag_sub', 'ex': 'forms\.bctween', 'to': 'forms between'},
        {'func': 'p_tag_sub', 'ex': 'frazil', 'to': 'frozen'},
        {'func': 'p_tag_sub', 'ex': 'fundion', 'to': 'function'},
        {'func': 'p_tag_sub', 'ex': 'Geomorohic', 'to': 'Geomorphic'},
        {'func': 'p_tag_sub', 'ex': 'habitat complexing features', 'to': 'habitat complex features'},
        {'func': 'p_tag_sub', 'ex': 'tfiereafter', 'to': 'hereafter'},
        {'func': 'p_tag_sub', 'ex': 'hcadpond', 'to': 'headpond'},
        {'func': 'p_tag_sub', 'ex': '(harm lo|hann to) ', 'to': 'harm to '},
        {'func': 'p_tag_sub', 'ex': 'instrcam|inslream', 'to': 'instream'},
        {'func': 'p_tag_sub', 'ex': 'in-situ', 'to': 'in situation'},
        {'func': 'p_tag_sub', 'ex': 'infdling', 'to': 'infilling'},
        {'func': 'p_tag_sub', 'ex': 'impiemeniation', 'to': 'implementation'},
        {'func': 'p_tag_sub', 'ex': 'IICAA', 'to': 'HCAA'},
        {'func': 'p_tag_sub', 'ex': 'lakeT>asin creating two pitsTPhaser PiFand BabyThaser Pit', 'to': 'lake basin creating two pits: Phaser Pit and Baby Phaser Pit'},
        {'func': 'p_tag_sub', 'ex': 'laxa', 'to': 'taxa'},
        {'func': 'p_tag_sub', 'ex': ' llie', 'to': ' the'},
        {'func': 'p_tag_sub', 'ex': ' ln\-water', 'to': ' In-water'},
        {'func': 'p_tag_sub', 'ex': 'long\-tern', 'to': 'long-term'},
        {'func': 'p_tag_sub', 'ex': 'mASL', 'to': 'm ASL'},
        {'func': 'p_tag_sub', 'ex': 'May lsl to August', 'to': 'May 1st to August'},
        {'func': 'p_tag_sub', 'ex': 'macroinvertebrales', 'to': 'macroinvertebrates'},
        {'func': 'p_tag_sub', 'ex': 'materia \!', 'to': 'material'},
        {'func': 'p_tag_sub', 'ex': 'mcusurcs', 'to': 'measures'},
        {'func': 'p_tag_sub', 'ex': 'miligaling', 'to': 'mitigating'},
        {'func': 'p_tag_sub', 'ex': 'mitigaEe|mitieate', 'to': 'mitigate'},
        {'func': 'p_tag_sub', 'ex': 'minimum ofl', 'to': 'minimum of 1'},
        {'func': 'p_tag_sub', 'ex': 'necessaiy', 'to': 'necessary'},
        {'func': 'p_tag_sub', 'ex': 'non-Iethal', 'to': 'nonlethal'},
        {'func': 'p_tag_sub', 'ex': 'nonnal water', 'to': 'normal water'},
        {'func': 'p_tag_sub', 'ex': 'nofbe', 'to': 'not be'},
        {'func': 'p_tag_sub', 'ex': ' amendment no\.l', 'to': ' amendment No. 1'},
        {'func': 'p_tag_sub', 'ex': 'oflsetting', 'to': 'offseting'},
        {'func': 'p_tag_sub', 'ex': '-Off-siteOff-selling', 'to': 'Offsite Offsetting'},
        {'func': 'p_tag_sub', 'ex': 'o (2016|2017|2018|2019)', 'to': r'\g<1>'},
        {'func': 'p_tag_sub', 'ex': 'Oc(d|é)ans', 'to': 'Oceans'},
        {'func': 'p_tag_sub', 'ex': 'Oncorhynchtis clarkia leivisi', 'to': 'Oncorhynchus clarkia lewisi'},
        {'func': 'p_tag_sub', 'ex': '(o)ffsite', 'to': r'\1ff-site'},
        {'func': 'p_tag_sub', 'ex': ' ofdry ', 'to': ' of dry '},
        {'func': 'p_tag_sub', 'ex': 'partie\(s\)\.', 'to': 'party(ies).'},
        {'func': 'p_tag_sub', 'ex': 'pennanent (destruction|grade)', 'to': r'permanent \g<1>'},
        {'func': 'p_tag_sub', 'ex': 'Phragmiles', 'to': 'Phragmites'},
        {'func': 'p_tag_sub', 'ex': 'P\.O\.Box', 'to': 'P.O. box'},
        {'func': 'p_tag_sub', 'ex': 'post\-ofTset\-construction', 'to': 'post offseting construction'},
        {'func': 'p_tag_sub', 'ex': 'post\-drawdown', 'to': 'post drawdown'},
        {'func': 'p_tag_sub', 'ex': 'post\-reintroduction', 'to': 'post reintroduction'},
        {'func': 'p_tag_sub', 'ex': 'pre and post construction|pre\- and post\-construction', 'to': 'preconstruction and postconstruction'},
        {'func': 'p_tag_sub', 'ex': 'prolecied', 'to': 'protected'},
        {'func': 'p_tag_sub', 'ex': 'puiposes', 'to': 'purposes'},
        {'func': 'p_tag_sub', 'ex': 'qualitv/auantitv', 'to': 'quality / quantity'},
        {'func': 'p_tag_sub', 'ex': 'rebar \(1 m\)', 'to': 'rebar 1 m'},
        {'func': 'p_tag_sub', 'ex': 'reluming', 'to': 'returning'},
        {'func': 'p_tag_sub', 'ex': 'Regulations\.All', 'to': 'Regulations. All'},
        {'func': 'p_tag_sub', 'ex': 'reouired', 'to': 'required'},
        {'func': 'p_tag_sub', 'ex': 'required lo ', 'to': 'required to '},
        {'func': 'p_tag_sub', 'ex': 'refeired', 'to': 'referred'},
        {'func': 'p_tag_sub', 'ex': 'resulls', 'to': 'results'},
        {'func': 'p_tag_sub', 'ex': 'realignement|realingment', 'to': 'realignment'},
        {'func': 'p_tag_sub', 'ex': 'respeclively', 'to': 'respectively'},
        {'func': 'p_tag_sub', 'ex': ' Re\\\’ised', 'to': 'Revised'},
        {'func': 'p_tag_sub', 'ex': 'streambed', 'to': 'stream bed'},
        {'func': 'p_tag_sub', 'ex': 'September l\!l', 'to': 'September 1st'},
        {'func': 'p_tag_sub', 'ex': 'Schedulers\!and criteria', 'to': 'Schedule(s) and criteria'},
        {'func': 'p_tag_sub', 'ex': 'scicntifically', 'to': 'scientifically'},
        {'func': 'p_tag_sub', 'ex': 'serious harm to\nOsh', 'to': 'serious harm to fish'},
        {'func': 'p_tag_sub', 'ex': 'stmcture', 'to': 'structure'},
        {'func': 'p_tag_sub', 'ex': 'sile conditions', 'to': 'site conditions'},
        {'func': 'p_tag_sub', 'ex': 'sGuide', 'to': 's Guide'},
        {'func': 'p_tag_sub', 'ex': 'pre shoal construction', 'to': 'pre-shoal construction'},
        {'func': 'p_tag_sub', 'ex': 'tailracc|lailracc|lailrace', 'to': 'tailrace'},
        {'func': 'p_tag_sub', 'ex': 'tannot', 'to': 'cannot'},
        {'func': 'p_tag_sub', 'ex': 'ihe', 'to': 'the'},
        {'func': 'p_tag_sub', 'ex': 'TTte spurs', 'to': 'The spurs'},
        {'func': 'p_tag_sub', 'ex': 'Teiritories', 'to': 'Territories'},
        {'func': 'p_tag_sub', 'ex': 'oftimeline', 'to': 'of timeline'},
        {'func': 'p_tag_sub', 'ex': 'timclinc|timetine', 'to': 'timeline'},
        {'func': 'p_tag_sub', 'ex': 'timelinefs(l|i|\))', 'to': 'timeline(s)'},
        {'func': 'p_tag_sub', 'ex': 'this authorization\.\:', 'to': 'this authorization:'},
        {'func': 'p_tag_sub', 'ex': 'to bo carried', 'to': 'to be carried'},
        {'func': 'p_tag_sub', 'ex': 'to fish\, arc\:', 'to': 'to fish, are:'},
        {'func': 'p_tag_sub', 'ex': 'lo prevent erosion', 'to': 'to prevent erosion'},
        {'func': 'p_tag_sub', 'ex': 'turbidimeter', 'to': 'turbidity meter'},
        {'func': 'p_tag_sub', 'ex': 'und(c|e)rt(a|n)(k|l)((d|i|l)n|m)g', 'to': 'undertaking'},
        {'func': 'p_tag_sub', 'ex': 'undertaking(\^\)|\(s\)\.)', 'to': 'undertaking(s)'},
        {'func': 'p_tag_sub', 'ex': 'veolcity', 'to': 'velocity'},
        {'func': 'p_tag_sub', 'ex': 'vork|v(v|w)ork|wotk', 'to': 'work'},
        {'func': 'p_tag_sub', 'ex': 'worfc', 'to': 'works'},
        {'func': 'p_tag_sub', 'ex': '\>work\(s\)|workfs\)', 'to': 'work(s)'},
        {'func': 'p_tag_sub', 'ex': 'w\'ater', 'to': 'water'},
        {'func': 'p_tag_sub', 'ex': 'watercoqrse', 'to': 'watercourse'},
        {'func': 'p_tag_sub', 'ex': '\\\work\(s\)', 'to': 'work(s)'},
        {'func': 'p_tag_sub', 'ex': 'ZoneHN', 'to': 'Zone 4, N'},
        {'func': 'p_tag_sub', 'ex': 'Big\sBuffalo\nLake\,', 'to': 'Big Buffalo Lake,'},
        {'func': 'p_tag_sub', 'ex': 'Municipality\,\sdistrict\,\stownship\,\scounty\;', 'to': 'Municipality, district, township, county:'},
        {'func': 'p_tag_sub', 'ex': 'Pump\nStation', 'to': 'Pump Station'},
        {'func': 'p_tag_sub', 'ex': 'Jaw River\nand Wascana', 'to': 'Jaw River and Wascana'},
        {'func': 'p_tag_sub', 'ex': 'OntarioProvince\:', 'to': 'Province: Ontario'},
        {'func': 'p_tag_sub', 'ex': 'Regional Municipality of DurhamProvince:', 'to': 'Regional Municipality of Durham\nProvince:'},
        {'func': 'p_tag_sub', 'ex': 'The City of Calgary\.', 'to': 'City of Calgary'},
        # remove
        {'func': 'p_tag_sub', 'ex': '(Attn|Attention to): ', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '(\(|\{)\s*hereafter referred to as the (“|\")\,?Proponent(\"|”)\s*\)', 'to': ''},
        {'func': 'p_tag_sub', 'ex': 'and M\)\n', 'to': 'and \n'},
        {'func': 'p_tag_sub', 'ex': 'Other DFO File No\.\:[ A-Z/]*\n', 'to': ''},
        {'func': 'p_tag_sub', 'ex': 'Canada((1\*1|l\+l|\+|(I|B)\^B) )?Canada', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '^i t \-|^0 »\*|/\d• « »|\. \. \./\d|4̂ c|/\d« 1\*|\.\.\./\d$$|\nJ4$$', 'to': ''},
        # sections
        {'func': 'p_tag_sub', 'ex': 'Paragraph(s? 34\.4\(2\)\((b|£)\) and)?\s*35\s*\(\s*2\s*\)\s*(\{|\()?\s*[\w|\d|\*|»|/|>|£|/|;|\?]+\s*\)\s*Fisheries\s*Act(\s*Authorization)?', 'to': 'PARAGRAPH 35(2)(b) FISHERIES ACT AUTHORIZATION'},
        {'func': 'p_tag_sub', 'ex': '^FISHERIES ?ACT(( IS| (3|2\>)5|\!5|S\*) ?\(2\)\(b\)?| )AUTHORIZATION', 'to': 'PARAGRAPH 35(2)(b) FISHERIES ACT AUTHORIZATION'},
        {'func': 'p_tag_sub', 'ex': 'Authorization\s+(I|i)ssued\s+to\:?\n?', 'to': 'Authorization issued to:'},
        {'func': 'p_tag_sub', 'ex': 'Location\s+o(f|r)\s+Proposed\s+(Project|Development)', 'to': 'Location of Proposed Project'},
        {'func': 'p_tag_sub', 'ex': 'Description\s+of\s+Proposed\s+(Project|Development)', 'to': 'Description of Proposed Project'},
        {'func': 'p_tag_sub', 'ex': 'Conditions\s+of\s+Authorization', 'to': 'Conditions of Authorization'},
        {'func': 'p_tag_sub', 'ex': 'Authorization\s+Limitation(s|\*)\s+and\s+Application\s+Conditions', 'to': 'Authorization Limitations and Application Conditions'},
        {'func': 'p_tag_sub', 'ex': 'Da\.?(l|t)e(\.|\s+)of\s*(I|l)ssuan(ce)?\:?', 'to': 'Date of Issuance:', 'c': True},
    ]

[header_extractor]
debug=1
cleaner=[
        {'func': 'p_tag_sub', 'ex': 'Fisheries and Oceans Peches et Oceans', 'to': ''},
        {'func': 'p_tag_sub', 'ex': 'pre\-\ndisturbance', 'to': 'pre-disturbance'},
    ]
id_list=[
        {'func': 'p_tag_eta', 'ex': '(?P<dfo_file_no>DFO +File +No *[0-9A-Z\! \.\,\:\-;\)\*]+)\n', 'keys': ['dfo_file_no'], 'to': r'\g<1>'},
        {'func': 'p_tag_eta', 'ex': '(?P<authorization_no>Authorization +No *[\! \.\,\:\-;\)\*][0-9A-Z\! \.\,\:\-;\)\*]*)\n', 'keys': ['authorization_no'], 'to': r'\g<1>'},
        {'func': 'p_tag_eta', 'ex': '(?P<path_no>PATH *No *[0-9A-Z\! \.\,\:\-;\)\*]+)\n', 'keys': ['path_no'], 'to': r'\g<1>'},
    ]
etx_list=[
        {'func': 'p_tag_etx', 'ex': 'Date of Issuance\s*\:\s*(?P<date_of_issuance>[A-Z]{3}\s+\d+\s+\d+)', 'to': ['date_of_issuance']},
    ]
cross_context=[
        { 'func': 'p_tag_eta', 'ex': '(?P<URL>(?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:\'".,<>?\xab\xbb\u201c\u201d\u2018\u2019]))', 'keys': ['URL']},
        { 'func': 'p_tag_eta', 'ex': '(?P<email>([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+)', 'keys': ['email']},
    ]
fixer=[
        {'func': 'p_tag_sub', 'ex': '(\,|\.) *:', 'to': '.:'},
        {'func': 'p_tag_sub', 'ex': '(\d|\-) +(\d|\-)', 'to': r'\g<1>\g<2>'},
    ]
verify=[
        {'func': 'p_tag_src', 'ex': '^(Authorization|DFO File|PATH) No\:'},
    ]

[section_splitter]
debug=3
st_name={ 
        'title': 10, 'proponent': 10, 'location': 10, 'description': 10, 'conditions': 10, 'limitations': 10, 'issuance': 10 
    }
st_word=[
        {'func': 'p_tag_sec', 'ex': 'PARAGRAPH 35\(2\)\(b\) FISHERIES ACT AUTHORIZATION', 'to': 'title', 'c': True},
        {'func': 'p_tag_sec', 'ex': 'Authorization issued to\:', 'to': 'proponent'},
        {'func': 'p_tag_sec', 'ex': 'Location of Proposed Project', 'to': 'location'},
        {'func': 'p_tag_sec', 'ex': 'Description of Proposed Project', 'to': 'description'},
        {'func': 'p_tag_sec', 'ex': 'Conditions of Authorization', 'to': 'conditions'},
        {'func': 'p_tag_sec', 'ex': 'Authorization Limitations and Application Conditions', 'to': 'limitations'},
        {'func': 'p_tag_sec', 'ex': 'Date of Issuance\:', 'to': 'issuance'},
    ]
st_post={
        'title': ['title', 's', 'title', 'e'],
        'proponent': ['proponent', 'e', 'location', 's'],
        'location': ['location', 'e', 'description', 's'],
        'description': ['description', 'e', 'conditions', 's'],
        'conditions': ['conditions', 'e', 'limitations', 's'],
        'limitations': ['limitations', 'e', 'issuance', 's'],
        'issuance': ['issuance', 's', None, None],
    }
st_subs=[
        {'func': 'p_tag_pos','ex': 'Valid Authorization Period for carrying', 'to': 'validity', 'from': 'location'},
    ]

[proponent_extractor]
debug=1
correct=[
        {'func': 'p_tag_sub', 'ex': '(\s*The\s+)(City\s+of)', 'to': r' \2', 'c': True},
        {'func': 'p_tag_sub','ex': 'TheCity', 'to': 'City'},
        {'func': 'p_tag_sub','ex': 'Director\, Ontario Waterways', 'to': 'Director of Ontario Waterways'},
        {'func': 'p_tag_sub','ex': 'Water Resources\s*\-\s*City of Calgary\s*', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': 'City of Calgary\s*(\-|\,)\s*Water Resources\s*', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': '(City of Calgary\s){2,}Water Resources', 'to': 'City of Calgary Water Resources'},
        {'func': 'p_tag_sub','ex': 'City of Calgary\s*\-\s*Transportation Infrastructure', 'to': 'City of Calgary\n Transportation Infrastructure'},
        {'func': 'p_tag_sub','ex': 'Station Waterloo', 'to': 'Station-Waterloo'},
        {'func': 'p_tag_sub','ex': 'Transportation and Community Planning Department', 'to': 'Transportation Community Planning Department'},
        {'func': 'p_tag_sub','ex': 'The City of Calgary\-Transportation Infrastructure', 'to': 'The City of Calgary, Transportation Infrastructure'},
        {'func': 'p_tag_sub','ex': 'Director of Infrastructure Services-Grant Murphy', 'to': 'Grant Murphy, Director of Infrastructure Services'},
        {'func': 'p_tag_sub','ex': 'Environment and Climate Change Canada', 'to': 'Environment Climate Change Canada'},
        {'func': 'p_tag_sub','ex': 'City of Winnipeg, Municipal Accommodations', 'to': 'City of Winnipeg Municipal Accommodations'},
        {'func': 'p_tag_sub','ex': 'Infrastructurthereafter', 'to': 'Infrastructure (hereafter'},
        {'func': 'p_tag_sub','ex': 'Trent-Sevem Waterway National Historic Site', 'to': 'Trent-Severn Waterway National Historic Site'},
        {'func': 'p_tag_sub','ex': 'Don Quest - Westmoreland Coal Company', 'to': 'Westmoreland Coal Company, Don Quest'},
        {'func': 'p_tag_sub','ex': 'patrice\.deneault@tasfic\-nwgsc\. EC\.ca', 'to': 'patrice.deneault@tasfic-pwgsc.gc.ca'},
        {'func': 'p_tag_sub','ex': 'Jason Man\-', 'to': 'Jason Man'},
        {'func': 'p_tag_sub','ex': 'Marie\-lIeicncTurgeon', 'to': 'Marie-Helene Turgeon'},
        {'func': 'p_tag_sub','ex': 'Peter MaKula', 'to': 'Peter Makula'},
        {'func': 'p_tag_sub','ex': 'Rafea!Odie', 'to': 'Rafael Odie'},
        {'func': 'p_tag_sub','ex': '\(timber Osiowy', 'to': 'Kimber Osiowy'},
        {'func': 'p_tag_sub','ex': 'Environnemental', 'to': 'Environmental'},
        {'func': 'p_tag_sub','ex': '\,  \- Senior Project Engineer', 'to': ', Senior Project Engineer'},
        {'func': 'p_tag_sub','ex': 'P\.O\.\s*Box\s2100\,\s*S(i|t)n\.?\s*M\.?(\,?\s[^\n]+\n)', 'to': r'P.O. Box 2100, Station M\2\n'},
        {'func': 'p_tag_sub','ex': 'Bag (\d+)\-(\d+)', 'to': r'Bag \1, Box \2, '},
        {'func': 'p_tag_sub','ex': 'Bag\s+(\d+),\s+Box\s+(\d+)\s', 'to': r'Bag \1, Box \2, '},
        {'func': 'p_tag_sub','ex': '(Bag|Box) (\d+)([^\s])', 'to': r'\1 \2\3,'},
        {'func': 'p_tag_sub','ex': '(Bag|Box) (\d+)\.', 'to': r'\1 \2, '},
        {'func': 'p_tag_sub','ex': 'Tupper St\. south', 'to': 'Tupper St. South'},
        {'func': 'p_tag_sub','ex': 'Kennsington Road', 'to': 'Kensington Road'},
        {'func': 'p_tag_sub','ex': '1555, Peel St\.', 'to': '1555 Peel St.'},
        {'func': 'p_tag_sub','ex': 'Suite \d+\n401 (\- )?9th Avenue S\.W\.', 'to': r'Suite \1, 401 9th Avenue SW'},
        {'func': 'p_tag_sub','ex': 'Director, Generation', 'to': 'Director Generation'},
        {'func': 'p_tag_sub','ex': '3505 18\'\" Street SW', 'to': '3505 18 Street SW'},
        {'func': 'p_tag_sub','ex': '10909 27\s*\,h Street SE', 'to': '10909 27th Street SE'},
        {'func': 'p_tag_sub','ex': '159 Sir William Hearst Ave\.\, 2nd\. Floor', 'to': '2nd Floor, 159 Sir William Hearst Ave'},
        {'func': 'p_tag_sub','ex': '\n([^\n]+)\n(Suite 13, 4\"\' Floor)', 'to': r'\nSuite 13, 4th Floor, \1'},
        {'func': 'p_tag_sub','ex': '3\"1 Floor\, 909\-3 Avenue N', 'to': '3rd Floor, 909 3 Avenue N'},
        {'func': 'p_tag_sub','ex': '909\-3\"1 Avenue North', 'to': '909 3 Avenue N'},
        {'func': 'p_tag_sub','ex': '1544929|1470424', 'to': ''},
        {'func': 'p_tag_sub','ex': 'S”1 Ave SE', 'to': '3rd Ave SE'},
        {'func': 'p_tag_sub','ex': '(\d+), 2nd Street', 'to': r'\1 2nd Street'},
        {'func': 'p_tag_sub','ex': '91 l \-32nd Ave NE', 'to': '911 32nd Ave NE'}, 
        {'func': 'p_tag_sub','ex': '9621-96(\"\')? Ave(nue)?', 'to': r'9621 96 Avenue'},
        {'func': 'p_tag_sub','ex': '2611\-3rd Avenue SE', 'to': r'2611 3rd Avenue SE'},
        {'func': 'p_tag_sub','ex': '10909 27°’ Street SE', 'to': '10909 27th Street SE'},
        {'func': 'p_tag_sub','ex': '13477-116th Avenue', 'to': '13477 116th Avenue'},
        {'func': 'p_tag_sub','ex': '700, 324-8 Ave. SW', 'to': '700-324 8 Ave SW'},
        {'func': 'p_tag_sub','ex': '133\s*\-\s*6th Avenue SE', 'to': '133 6th Avenue SE'},
        {'func': 'p_tag_sub','ex': 'McLeod Trail', 'to': 'MacLeod Trail'},
        {'func': 'p_tag_sub','ex': '4920 51\*\' Street', 'to': '4920 51 Street'},
        {'func': 'p_tag_sub','ex': '93\, rue Arseneault', 'to': '93 rue Arseneault'},
        {'func': 'p_tag_sub','ex': '450(\.1st|\-1\*\'?| I st| lsl) Street SW', 'to': '450 1st Street SW'},
        {'func': 'p_tag_sub','ex': '4429 \- 44\"\' Street', 'to': '4429 44 Street'},
        {'func': 'p_tag_sub','ex': '13477-116\'h Avenue', 'to': '13477 116th Avenue'},
        {'func': 'p_tag_sub','ex': '346 \- 3\* Street SE', 'to': '346 3 Street SE'},
        {'func': 'p_tag_sub','ex': '107\-3\"1 Street South', 'to': '107 3 Street South'},
        {'func': 'p_tag_sub','ex': '11-O-Gemma Street', 'to': '11 O\'Gemaa Street'},
        {'func': 'p_tag_sub','ex': '23rd\.', 'to': '23rd'},
        {'func': 'p_tag_sub','ex': 'John\-Counter', 'to': 'John Counter'},
        {'func': 'p_tag_sub','ex': '(Place du Portage),\s([^\n]+)\n', 'to': r'\2, Place-du-Portage, '},
        {'func': 'p_tag_sub','ex': 'Bowmanvillc', 'to': 'Bowmanville'},
        {'func': 'p_tag_sub','ex': 'Vaughn', 'to': 'Vaughan'},
        {'func': 'p_tag_sub','ex': 'Surtey', 'to': 'Surrey'},
        {'func': 'p_tag_sub','ex': 'Thombury', 'to': 'Thornbury'},
        {'func': 'p_tag_sub','ex': '(City of Calgary\s){2,}', 'to': 'City of Calgary'},
    ]
extract=[
        {'func': 'p_tag_etx', 'ex': '(Phone\:\s)?(?P<phone>\(?\d{3}\)?(\-| )\d{3}\-\d{4})', 'to': ['phone']},
        {'func': 'p_tag_etx', 'ex': '(Fax\:\s)(?P<fax>\d{3}\-\d{3}\-\d{4})', 'to': ['fax']},
        {'func': 'p_tag_etx', 'ex': '(Email\:\s)?(?P<email>[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,})', 'to': ['email']},
        {'func': 'p_tag_etx', 'ex': '(?P<postcode>[A-Z][0-9][A-Z]\s[0-9][A-Z][0-9])', 'to': ['postcode']},
        {'func': 'p_tag_etx', 'ex': '(?P<organization>((Corporation of )?(City|(the )?County|(the )?Town|Township|County|(The\s)*((Regional|Rural) )*Municipality)\s+of\s+(Calgary Water Resources|Barrie|Belleville|Black Diamond|Blue Mountains|Bradford West Gwillimbury|Bruce|Cardston|Cobourg|Cochrane|Dawn\-Euphemia|Durham|Edmonton|East St\. Paul|Fort MacLeod|Hamilton|Howick|Huron\-Kinloss|Innisfil|Iqaluit|Kingston|Kitchener|Medicine Hat|Niagara|Norfolk Treheme|North Perth|Oakville|Okotoks|Ontario Trap Rock|Ottawa|Oshawa|(Region of )?Peel|Quinte West|Peterborough|Portage la Prairie|Red Deer|Simcoe|Souris\-Glenwood|St\. Thomas|Rocky View County|Turner Valley|Two Borders|Vulcan|Waterloo|Wellington|Whitecourt|Winnipeg( Municipal Accommodations)?|York)|Municipal District of Foothills (No\. )?31|Government of Nunavut|Bruce County|Rural Municipality of Britannia no\. 502))', 'to': ['organization']},
        {'func': 'p_tag_etx', 'ex': '(?P<organization>(AltaLink Management Ltd\.|Alberta (Environment and Parks|Transportation)|Canadian(\s+Pacific\s+Railway|\sWildlife Service)|City of (Calgary|Red Deer Engineering Services)|Community and Government Services|Energy Ottawa Inc\.|Environment Climate Change Canada|Government of Nunavut|Infrastructure Services|MD of (Ranchland|Pincher Creek) No\.? (9|66)|Ontario Ministry of Natural Resources and Forestry|Parks(\s+and\s+Open\s+Spaces?|and Recreation Department|Planning and Development)|(Peguis|Long Plain) First Nation|Rainy River Project|Riding Mountain National Park of Canada|Toronto and Region Conservation Authority|Transportation Infrastructure|Trent( |\-)Severn Waterway( National Historic Site)?|SaskWater|Darlington Nuclear|St\. Catharines Hydro Inc\.|Ontario Limited|Engineering Services|Pickering Nuclear Generating Facility|Ontario Inc\.|Mattamy \(Mer Bleue\) Ltd\.|Waterfront Toronto|Goderich Port Management Corporation|Shadow Creek Resort|Capital Projects))', 'to': ['organization']},
        {'func': 'p_tag_etx', 'ex': '(?P<city>(Banff|\nBarrie|Belle River|Black Diamond|Bowmanville|Bradford|Brampton|Cedar Point|Cobourg|Cochrane|Downsview|East St\. Paul|Fort (McMurray|MacLeod)|Gatineau|Goderich|Hamilton|High Prairie|Hinton|Kingsey Falls|Lloydminster|Markham|Medicine Hat|Melita|Midhurst|Moose Jaw|Nanton|Newmarket|Okotoks|Onanole|Peace River|Peguis|Peterborough|Pickering|Portage La Prairie|Red Deer|Regina|Ripley|Rocky View County|South Porcupine|Stony Plain|St\. Catharines|St\. Thomas|Surrey|Thornbury|Thorold|Thunder Bay|Treheme|Vaughan|Val\-d’Or|Vulcan|Whitby))', 'to': ['city']},
        {'func': 'p_tag_etx', 'ex': '(?P<place>((\d+\-)?\d+\s(rue )?((\d+(st|nd|rd|th)?|Albion|Armour|Ashbumham|Arseneault|Barrie|Bay|Birds Hill|Broadway|Brier Park|Bristol Circle|Centre|Collier|Creswell|Dissette|Dufferin|Exchange|Exeter|Fairford|Garry|Garth|Gulf Canada|Highway 7|Hines|Innisfil Beach|James|John Counter|Kensington|King|Kipling|Lajeunesse|Lambton Line|Lexington|Lillydale|Laurier|Main|Manning|MacLeod Trail|Merivale|Mill|Moodie|Montgomery Park|Mountain River Estates|North Harbour|Oak|Ogden Dale|Old Deny|Ontario|Pacific|Park|Peel( Centre)?|Portage|Power|Queen|Ranchehouse|Rossland|Saghalie|Scotland|Sifton|Sir William Hearst|Spiller|St\. David\’s|Talbot|Tie|Tupper|Trafalgar|Upper Middle|Vansickle|Victoria|Wallace|Wasagaming|Wilson|Woolwich|Yonge)(\s+(Ave(nue)?|Blvd\.?|Court|Drive|Place|Square|R(oa)?d\.?( Complex)?|St(reet|\.)?))?(\s+(North|South|East|West|NE|SE|N(W)?|S(W)?))?)))', 'to': ['place']},
        {'func': 'p_tag_etx', 'ex': '(?P<place>(\d+\s(Peel Centre Drive|Lillydale Avenue)))', 'to': ['place']},
        {'func': 'p_tag_etx', 'ex': '(?P<title>(P\.Eng\.?|(A\/)?Chief Administrative Officer|Chief|Chief Administrative Officer|Construction Coordinator|(Regional )?Director\s*(of (Ontario Waterways|Physical Services)|Generation|Regulatory\, Mining\, Extraction \& Upgrading)?|(Drainage|Environmental)\sSuperintend(a|e)nt|Gen\. Supervisor of Special Projects|P\.\s* Eng.(\, M\.\s* Eng.)*|Project (Director|Officer)|Senior (Project|Reservoir Development) Engineer|System Manager Environmental Assessment|(Senior Vice )?President))', 'to': ['title']},
        {'func': 'p_tag_etx', 'ex': '(?P<person>(Evin Dvorak|Isabelle Shelvey))', 'to': ['person']},
    ]
cleanup=[
        {'func': 'p_tag_sub','ex': '^([^A-Z0-9]+)([A-Za-z0-9 ,\.]+[A-Za-z0-9]+)(.*)$$', 'to': r'\g<2>'},
        {'func': 'p_tag_sub','ex': '^((c/o) )?[ ,]+$$', 'to': ''},
        {'func': 'p_tag_sub','ex': '\,{2,}', 'to': ','},
    ]

[location_extractor]
debug=1
max_tag=5
doc_4_tags=[
        {'func': 'p_tag_src','ex': '1(4|5|6|7)\-HCAA-0(0|1)(525|658|180|582|360|612|754|829|087|168|658)'}
    ]
extract=[
        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> <province> <watercourse> <geo_location> <utm_coordinates> PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n(?P<utm_coordinates>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\:\nUTM\sCoordinates\:\n', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location', 'utm_coordinates']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <community> <municipality> <province> <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+waterbody\:\n(Longitude\s+and\s+latitude(\,\sUTM\sCoordinates)?|UTM\sCoordinates)\:\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>(.|\n)+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <geo_location> ((?!\d+N).)*\d+N(\n((?!\d+N).)*\d+N)* <community> <municipality> <province> <watercourse>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\s(?P<geo_location>((?!\d+N).)*\d+N(\n((?!\d+N).)*\d+N)*)\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION <geo_location> ([^\n]|W)+ <community> <municipality> <province> <watercourse>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\s(?P<geo_location>([^\n]|W)+)\n(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; MAIN ---> <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+(\{|\()city\,\s+town\,\s*(or\s)?village\))?\:(?P<nearest_community>[^\n]+)\n(Municipality(\,\s+district\,\s+township\,\s+county)?|District)\:(?P<municipality>[^\n]+)?\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+water(course(\,\s+water\s*body|s)?|body)\:(?P<watercourse>(.|\n)+)\n(Longitude\s+and\s+latitude\:|(Latitude\,\sLongitude\s\()?Decimal Degrees\)?\:|Latitude(\,|\sand)\sLongitude(\sCoordinates)?\:|Location\:\sLatitude\sand\sLongitude(\,\sUTM\sCoordinates)?\:|Location\:\sUTM\sCoordinates\:|(Longitude\s+and\s+latitude(\,(\s+|\.)|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)?', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+\(city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse(\,\s+water\s*body|s)?\:(?P<watercourse>[^\n]+)\n(|Longitude\s+and\s+latitude\:|Location\:\sLatitude\sand\sLongitude\,\sUTM\sCoordinates\:|(Longitude\s+and\s+latitude(\,\s+|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> TERRITORY <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '(?P<place>(.+\n)+)?Nearest\s+community\s(\(city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\n(Municipality(\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\n)?Territory\:(?P<province>[^\n]+)\nName\s+of\s+(watercourse\,\s)?waterbody\:(?P<watercourse>[^\n]+)\n(Longitude\s+and\s+latitude\:|(Longitude\s+and\s+latitude(\,\s+|\s+\/\s+))?UTM\sCoordinates\:)\n?(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': '(?P<place>(.+\n)+)?Nearest\s+community\:(?P<nearest_community>[^\n]+)\n(Municipality\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse\,\swaterbody\:(?P<watercourse>[^\n]+)\n(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <province>  <watercourse> <geo_location> <utm_coordinates>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\n(Upstream\sUTM Coordinates\:\nDownstream\s)?UTM\sCoordinates\:\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n(?P<utm_coordinates>[^\n]+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location', 'utm_coordinates']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <province>  <watercourse> <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\n(Latitude\sand\sLongitude|UTM)\sCoordinates\:\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\n', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; Simplified MAIN ---> <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE <province> WATERCOURSE <watercourse> GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community\:(?P<nearest_community>[^\n]+)\nMunicipality\:(?P<municipality>[^\n]+)\nProvince\:(?P<province>[^\n]+)\nName\s+of\s+watercourse\:(?P<watercourse>[^\n]+)\nLatitude\sand\slongitude\:(?P<geo_location>(.+\n)+)', 'to': ['place', 'nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <community> <municipality>  <province>  <watercourse> <geo_location> COMMUNITY MUNICIPALITY PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': '(?P<nearest_community>[^\n]+)\n(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\nNearest\s+community\s+\(city\,\s+town\,\s+village\)\:\nMunicipality\,\s+district\,\s+township\,\s+county\:\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY <community> MUNICIPALITY <municipality>  <province>  <watercourse> <geo_location> PROVINCE WATERCOURSE GEOLOCATION
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n(?P<geo_location>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nUTM\sCoordinates\:\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; COMMUNITY <community> MUNICIPALITY <municipality>  <province>  <watercourse> PROVINCE WATERCOURSE GEOLOCATION <geo_location>
        {'func': 'p_tag_etx', 'ex': 'Nearest\s+community\s+\(city\,\s+town\,\s+village\)\:(?P<nearest_community>[^\n]+)\nMunicipality\,\s+district\,\s+township\,\s+county\:(?P<municipality>[^\n]+)\n(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\nProvince\:\nName\s+of\s+watercourse\,\s+water\s*body\:\nLongitude\sand\slatitude\,\sUTM\sCoordinates\:(?P<geo_location>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},

        ; <place> COMMUNITY <community> MUNICIPALITY <municipality> PROVINCE WATERCOURSE GEOLOCATION <geo_location> <province>  <watercourse> 
        {'func': 'p_tag_etx', 'ex': '((?P<place>(.+\n)+)\n)?Nearest\s+community(\s+(\{|\()city\,\s+town\,\s+village\))?\:(?P<nearest_community>[^\n]+)\nMunicipality(\,\s+district\,\s+township\,\s+county)?\:(?P<municipality>[^\n]+)\nProvince\:\nName\s+of\s+water(course(\,\s+water\s*body|s)?|body)\:\nLongitude\s+and\s+latitude\,\sUTM\sCoordinates\:\n?(?P<geo_location>(.+\n)+)(?P<province>[^\n]+)\n(?P<watercourse>[^\n]+)\n', 'to': ['nearest_community', 'municipality', 'province', 'watercourse', 'geo_location']},
    ]
cleanup=[
        {'func': 'p_tag_sub', 'ex': '^\: *', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '\nCanad\'a[\. /0-9]+$$', 'to': ''},
        {'func': 'p_tag_sub','ex': '^[ ,]+$$', 'to': ''},
        {'func': 'p_tag_sub','ex': '\n\- *\d+ *\-$$', 'to': ''},
    ]

[description_extractor]
debug=1
commons={
    'proj_1': {'func': 'p_tag_sec','ex': 'The\s+proposed\s+(project\s+(of\s+which\s+the\s+works?\,\s+undertakings?\s+or\s+activit(y|ies)?\s+authorized\s+(is\s+a\s+part\s+(of\s+)?)?)?|development\s+impacting\s+fish\s+habitat\s+)involves\:?', 'to': 'proj'},
    'proj_2': {'func': 'p_tag_sec','ex': 'The\s+proposed\s+development\s+impacting\s+on\s+fish\s+(and\s+fish\s+)?habitat\s+involves\:', 'to': 'proj'},

    'auth_work_harm_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work(s|\(s\))?\,\s+undertaking(s|\(s\))?\,?\s+or\s+activit(ies|y(\(ies\))?)?\s+likely\s+to\s+result\s+in\s+serious\s*harm\s+to\s+fish(\s+and\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk)?', 'to': 'auth_work_harm'},
    'auth_work_harm_2': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\,\s+undertaking\s+or\s+activity\s+to\s+Fish\s+(and\s+Fish\s+)?Habitat', 'to': 'auth_work_harm'},

    'work_harm_1': {'func': 'p_tag_sec','ex': 'The work\(?s\)?,\s+undertaking\(?s\)?\,?\s*or\s+activit(y\()?ies\)?\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,?\s+(that|which)\s+(are|is)\s+likely\s+to\s+result\s+in\s+serious\s+harm\s+to\s+fish\,?\s+(and\s+(in\s+)?impacts\s+to\s+(aquatic\s+)?species\s+at\s+risk\,?\s+)?(are|is|include)(\:|;)', 'to': 'work_harm'},
    'work_harm_2': {'func': 'p_tag_sec','ex': 'Authorized\s+impacts\s+to\s+fish\s+(and\s+fish\s+)?habitat\s+resulting\s+from\s+the\s+carrying\s+on\s+of\s+a\s+work\, undertaking\s+or\s+activity\s+associated\s+with\s+the\s+proposed\s+development\s+described\s+above\s+include\:', 'to': 'work_harm'},

    'auth_work_habitat_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+the\s+harmful\s+alteration\,\s+disruption\s+or\s+destruction\s+of\s+fish\s+habitat\:', 'to': 'auth_work_habitat'},

    'work_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+the\s+harmful\s+alteration\,\s+disruption\s+or\s+destruction\s+of\s+fish\s+habitat\,\s+are\:', 'to': 'work_habitat'},

    'auth_act_habitat_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'auth_act_habitat'},
    'auth_act_habitat_2': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\,\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'auth_act_habitat'},

    'act_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\,\s+are\:', 'to': 'act_habitat'},
    'act_habitat_2': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\,\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\:', 'to': 'act_habitat'},

    'auth_fish_death_1': {'func': 'p_tag_sec','ex': 'Description\s+of\s+Authorized\s+work\(s\)\,\s+undertaking\(s\)\s+or\s+activity\(ies\)\s+likely\s+to\s+result\s+in\s+the\s+death\s+of\s+fish\s+by\s+means\s+other\s+than\s+fishing\:', 'to': 'auth_fish_death'},

    'fish_death_1': {'func': 'p_tag_sec','ex': 'The\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+associated\s+with\s+the\s+proposed\s+project\s+described\s+above\,\s+that\s+are\s+likely\s+to\s+result\s+in\s+the\s+death\s+of\s+fish\s+by\s+means\s+other\s+than\s+fishing\,\s+are\:', 'to': 'fish_death'},

    'impact_harm_1': {'func': 'p_tag_sec','ex': 'The\s+serious\s+harm\s+to\s+fish\s+(and\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\s+)?likely\s+to\s+result\s+from\s+the\s+proposed\s+work(s|\(s\))?\,\s+undertaking(s|\(s\))?\,\s*or\s+activit(ies|y(\(ies\))?)?\,\s*and\s+covered\s+by\s+this\s+authorization\s+(includes|are)(\;|\:)?', 'to': 'impact_harm'},

    'impact_habitat_1': {'func': 'p_tag_sec','ex': 'The\s+authorized\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+are\s+likely\s+to\s+result\s+in\s+the\s+following\s+impacts\s+to\s+fish\s+and\s+fish\s+habitat\:', 'to': 'impact_habitat'},

    'impact_species_1': {'func': 'p_tag_sec','ex': 'The\s+prohibited\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\,\s+their\s+critical\s+habitat\s+and\/or\s+the\s+residences\s+of\s+their\s+individuals\s+likely\s+to\s+result\s+from\s+the\s+proposed\s+work\(s\)\,\s+undertaking\(s\)\,\s+or\s+activity\(ies\)\s+and\s+covered\s+by\s+this\s+authorization\s+are\:', 'to': 'impact_species'},
    'impact_species_2': {'func': 'p_tag_sec','ex': 'The\s+impacts\s+to\s+aquatic\s+species\s+at\s+risk\s+likely\s+to\s+result\s+from\s+the\s+proposed\s+work\,\s+undertaking\,\s+or\s+activity\,\s+and\s+covered\s+by\s+this\s+authorization\s+includes\:', 'to': 'impact_species'},
    }
process=[
    {
        'extract': [ 'proj_1', 'auth_work_habitat_1', 'work_habitat_1', 'auth_act_habitat_1', 'act_habitat_1', 'impact_habitat_1', 'impact_species_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', 'impact_species', 's'],
            'impact_species': ['impact_species', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_harm_1', 'work_harm_1', 'auth_act_habitat_2', 'act_habitat_2', 'impact_harm_1', 'impact_species_2'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_harm', 's'],
            'impact_harm': ['impact_harm', 'e', 'impact_species', 's'],
            'impact_species': ['impact_species', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_habitat_1', 'work_habitat_1', 'auth_act_habitat_1', 'act_habitat_1', 'impact_habitat_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'auth_act_habitat', 's'],
            'auth_act_habitat': ['auth_act_habitat', 's', 'auth_act_habitat', 'e'],
            'act_habitat': ['act_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_fish_death_1', 'fish_death_1', 'auth_work_habitat_1', 'work_habitat_1', 'impact_habitat_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_fish_death', 's'],
            'auth_fish_death': ['auth_fish_death', 's', 'auth_fish_death', 'e'],
            'fish_death': ['fish_death', 'e', 'auth_work_habitat', 's'],
            'auth_work_habitat': ['auth_work_habitat', 's', 'auth_work_habitat', 'e'],
            'work_habitat': ['work_habitat', 'e', 'impact_habitat', 's'],
            'impact_habitat': ['impact_habitat', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_harm_1', 'work_harm_1', 'impact_harm_1', ],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'impact_harm', 's'],
            'impact_harm': ['impact_harm', 'e', None, None],
        },
    }, {
        'extract': [ 'proj_1', 'auth_work_harm_1', 'work_harm_1'],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', None, None],
        },
    }, {
        'extract': [ 'auth_work_harm_1', 'work_harm_1', ],
        'position': {
            'proj': [None, None, 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', None, None],
        },
        'padding': 'proj',
    }, {
        'extract': [ 'auth_work_harm_1', 'work_harm_1', 'impact_harm_1', ],
        'position': {
            'proj': [None, None, 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', 'harm', 's'],
            'impact_harm': ['impact_harm', 'e', None, None],
        },
        'padding': 'proj'
    }, {
        'extract': [ 'proj_2', 'auth_work_harm_2', 'work_harm_2', ],
        'position': {
            'proj': ['proj', 'e', 'auth_work_harm', 's'],
            'auth_work_harm': ['auth_work_harm', 's', 'auth_work_harm', 'e'],
            'work_harm': ['work_harm', 'e', None, None],
        },
    }
    ]
element={
        'proj': 10, 'auth_work_harm': 10, 'work_harm': 8, 'impact_harm': 10, 
        'auth_work_habitat': 10, 'work_habitat': 10, 'auth_act_habitat': 10, 'act_habitat': 10,
        'auth_fish_death': 10, 'fish_death': 10, 'impact_habitat': 10, 'impact_species': 10,
    }
cleaner=[
        {'func': 'p_tag_sub', 'ex': '8\n,h Avenue SE', 'to': '8th Avenue SE'},
        {'func': 'p_tag_sub', 'ex': '(S|Canad\'ai)?Paragraph 35\(2\)(\(|<)(6|\&|b|fo)\) Fisheries Ac(i|t) Authorization: (1|I) ?4\-HCAA\-(000|OOO)(1| ?I)6', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '(S|Canad\'ai)?PARAGRAPH 35\(2\)\(b\) FISHERIES ACT AUTHORIZATION\: *14\-HCAA\-00098', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '(Canada|\d)?PARAGRAPH 35\(2\)\(b\) FISHERIES ACT AUTHORIZATION\: *1(4|5|6|7)\-HCAA\-0(0014|0225|0814|1483|1928|0039|0279|0430|0965|1266|1288|1305|1344|1531|0015|0248|0274|0309|0310|0311|0675|0835|1042|1721|0177|0619)', 'to': ''},
    ]

[condition_extractor]
debug=1
correct=[
        {'func': 'p_tag_sub', 'ex': '\n(\d+(\.\d+)+) +', 'to': r'\n\g<1>. '},
        {'func': 'p_tag_sub', 'ex': '\n(All water intakes((?!\.2\.2\.4)(.|\n))*)\.(2\.2\.4)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '\n(Annual reports shall describe((?!3\.1\.1\.2)(.|\n))*)\n(3\.1\.1\.2)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '\n3\. JJ\.3', 'to': '\n3.1.1.3.'},
        {'func': 'p_tag_sub', 'ex': '\n(Annual reports shall summarize((?!3\.1\.1\.5)(.|\n))*)\n(3\.1\.1\.5)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': 'reporting\, are met\.', 'to': 'reporting, are met.\n'},
        {'func': 'p_tag_sub', 'ex': '\n(An annual monitoring report on operation of the Timiskaming((?!5\.2\.3)(.|\n))*)\n(5\.2\.3)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '\n(Rock riprap that will come((?!2\.4\.5)(.|\n))*)\n(2\.4\.5)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '\n(Materials used to construct((?!2\.4\.6)(.|\n))*)\n(2\.4\.6)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '\n(Sediment releases from first((?!2\.4\.8)(.|\n))*)\n(2\.4\.8)', 'to': r'\n\g<4>. \g<1>'},
        {'func': 'p_tag_sub', 'ex': '(2)\* (Conditions that relate to measures and standards)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2)\*(1\.) (Sediment and erosion control)', 'to': r'\g<1>.\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(2\.1\.2)\* (Erosion and sediment control)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2)\+(1\.3\.) *(All works shall be conducted)', 'to': r'\g<1>.\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '\-(2\.1\.4\.) *(Construction activities shall be)', 'to': r'\g<1> \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(3\.) L (Monitoring of avoidance)', 'to': r'\g<1>1. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(4)\+(2)\+(6)\+ (Creation of channels connecting)', 'to': r'\g<1>.\g<2>.\g<3>. \g<4>'},
        {'func': 'p_tag_sub', 'ex': '\-(5\.1\.) lJ\.(Form and stability of all)', 'to': r'\g<1>.1. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(condition)\n(4\.3\.3\. are)', 'to': r'\g<1> \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(5\.)(1\.)(2\.) (Written reports to include, but not limited to\, criteria listed in conditions)', 'to': r'\g<1>\g<3>\g<2> \g<4>'},
        {'func': 'p_tag_sub', 'ex': '(2)(2\.6\.2\.) (Not be obtained)', 'to': r'\g<1>.\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '\* (3\.1) (Monitoring of avoidance)', 'to': r'\g<1>. \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2\.)(2)(2\.)(5|6)', 'to': r'\g<1>\g<2>.\g<3>\g<4>'},
        {'func': 'p_tag_sub', 'ex': '(2\.2)\,(2\.) (In\-water work)', 'to': r'\g<1>.\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(4\.4\.) (1) \. (Scale and description)', 'to': r'\g<1>\g<2>. \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(Condition)\n(5\.2\.1\. below)', 'to': r'\g<1> \g<2>'},
        {'func': 'p_tag_sub', 'ex': '(2)(2\.2\.2\.)', 'to': r'\g<1>.\g<2>'},
        {'func': 'p_tag_sub', 'ex': '(5\.)(2)\*(2)', 'to': r'\g<1>\g<2>.\g<3>.'},
        {'func': 'p_tag_sub', 'ex': '(2\.)(1)(3\.) (Work that could result)', 'to': r'\g<1>\g<2>.\g<3> \g<4>'},
        {'func': 'p_tag_sub', 'ex': '(4\.4\.1\.) \,(2\.) (Should)', 'to': r'\g<1>\g<2> \g<3>'},
        {'func': 'p_tag_sub', 'ex': '(S)(\.1) (Schedule\(s\) and criteria)', 'to': r'5\g<2>. \g<3>'},
    ]
extract=[
        {'func': 'p_tag_sea', 'ex': '\n(?P<bullet>([1-9]\.(\d{1,2}\.)*)\s+)(?P<content>((?!\n[1-9]\.(\d{1,2}\.)*)(.|\n))+)', 'to': ['bullet', 'content']},
    ]
cleaner=[
        {'func': 'p_tag_sub', 'ex': '(S|Canad\'ai)?Paragraph 35\(2\)(\(|<)(6|\&|b|fo)\) Fisheries Ac(i|t) Authorization: (1|I) ?4\-HCAA\-(000|OOO)(1| ?I)6', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '(S|Canad\'ai)?PARAGRAPH 35\(2\)\(b\) FISHERIES ACT AUTHORIZATION\: 14\-HCAA\-00098', 'to': ''},
        {'func': 'p_tag_sub', 'ex': ',J6I 91', 'to': ''},
        {'func': 'p_tag_sub', 'ex': '(Canada|\d)?PARAGRAPH 35\(2\)\(b\) FISHERIES ACT AUTHORIZATION\: *1(4|5|6|7)\-HCAA\-0(0014|0225|0814|1483|1928|0039|0279|0430|0965|1266|1288|1305|1344|1531|0015|0248|0274|0309|0310|0311|0675|0835|1042|1721|0177|0619)', 'to': ''},
    ]

[pos_processor]
debug=1
extractors=[
    {
        'entity': 'KP',
        'grammar': r'(\d+_JJ[R|S]?\s)?(\d+_(NN\w?|VB[G|N|D]?)(\s\d+_IN)?\s)?(\d+_(NN\w?|VB[G|N|D]))+',
        'collect': r'(\d+)_(VB[G|N|D]|JJ[R|S]?|IN|NN\w?)',
    },
    {
        'entity': 'FP',
        'grammar': '\d+_CD\s(\d+_(NN\w?|VB[G|N|D])\s(\d+_IN\s)?)*\d+_NN\w?',
        'collect': '(\d+)_(CD|JJ[R|S]?|NN\w?|VB[G|N|D]|IN)',
    },
    ]

[doc_processor]
html_path=/xhtml
json_path=/json
