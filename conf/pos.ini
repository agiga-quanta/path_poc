#__author__ = "Nghia Doan"
#__company__ = "Agiga Quanta Inc."
#__copyright__ = "Copyright 2021"
#__version__ = "0.1.0"
#__maintainer__ = "Nghia Doan"
#__email__ = "nghia71@gmail.com"
#__status__ = "Development"

[nlp_processor]
debug=1
; url=http://stanford_nlp:9000/?properties={"outputFormat":"json"}
url=http://localhost:9000/?properties={"outputFormat":"json"}
spellcheck=True

[pos_processor]
debug=1
min_word=3
grammar=(\d+_(CD|VB[G|N|D]?)\s((\d+_IN\s)?\d+_DT\s)?(\d+_(CD|VB[G|N|D]?|JJ[R|S]?)\s)*)(\d+_NN\w?(\s\d+_NN\w?)*)+|\d+_DT\s\d+_NN\w?\s(\d+_NN\w?\s)*\d+_IN\s(\d+_DT\s)?(\d+_NN\w?\s)+(\d+_CC\s)?\d+_(VB[G|N|D]?|NN\w?)(\s\d+_NN\w?)*|\d+_DT\s\d+_NN\w?\s(\d+_NN\w?\s)*(\d+_IN\s)?\d+_CD(\s\d+_JJ[R|S]?)?(\s\d+_NN\w?\s(\d+_NN\w?\s)*)|\d+_NN\w?\s(\d+_NN\w?\s)*(\d+_IN\s)?\d+_CD(\s\d+_JJ[R|S]?)?(\s\d+_NN\w?\s(\d+_NN\w?\s)*)|(\d+_NN\w?(\s\d+_NN\w?)*)+\s\d+_CD|(\d+_NN\w?(\s\d+_NN\w?)*)+
collect=(\d+)_(CC|CD|DT|IN|JJ[R|S]?|NN\w?|VB[G|N|D]?)
q_words=[
        'all', 'any', 'each', 'every', 'half', 'once', 'some'
    ]

[case_processor]
json_path=data/json
extractors={
    'lookup': {
        'phrases': ['permanent alteration', 'harmful alteration', 'destroyed', 'permanently destroyed', 'disruption', 'death of fish', 'temporary alteration', 'permanent destruction'],
        'grammar': r'(\d+_JJ[R|S]?\s)?(\d+_(NN\w?|VB[G|N|D]?)((\s\d+_IN)?\s\d+_(NN\w?|VB[G|N|D]?))*)+',
        'collect': r'(\d+)_(VB[G|N|D]?|JJ[R|S]?|NN\w?)',
    },
    'reason': {
        'phrases': ['dredging', 'rip rap', 're-sloping', 'piles', 'realignment', 'culvert', 'rock fill', 'fill', 'pier', 'instream pier',
        'abutment', 'berms', 'armouring', 'concrete pipe', 'extension', 'channel realignment', 'temporary infilling', 'coffer dam',
        'in-stream pier', 'placement of sand', 'spur', 'bank protection', 'hydraulic impact', 'dewatering', 'changes to flow',
        'incidental', 'channel deepening', 'causeway', 'construction',],
        'grammar': r'(\d+_JJ[R|S]?\s)?(\d+_(NN\w?|VB[G|N|D]?)((\s\d+_IN)?\s\d+_(NN\w?|VB[G|N|D]?))*)+',
        'collect': r'(\d+)_(VB[G|N|D]?|JJ[R|S]?|NN\w?)',
    },
    'footprint': {
        'grammar': '\d+_CD(\s\d+_JJ[R|S]?)?(\s\d+_(NN\w?|VB[G|N|D]?|UH)((\s\d+_IN)?\s\d+_(NN\w?|VB[G|N|D]?))*)',
        'collect': '(\d+)_(CD|JJ[R|S]?|NN\w?|UH)',
    },
    'impact': {
        'grammar': r'(\d+_JJ[R|S]?\s)?(\d+_(NN\w?|VB[G|N|D]?)((\s\d+_IN)?\s\d+_(NN\w?|VB[G|N|D]?))*)+',
        'collect': '(\d+)_(VB[G|N|D]?|JJ[R|S]?|NN\w?)',
    },
    }

[summary]
summ_pcnt=0.2
imag_opts={
        '__DEFAULT__': { 'path': '', 'colormap': 'Dark2', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        '__TF__': { 'path': '/tf', 'colormap': 'Dark2', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'tab10': { 'path': '/opt_1', 'colormap': 'tab10', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'copper': { 'path': '/opt_2', 'colormap': 'copper', 'background_color': 'white', 'width': 1600, 'height': 1200 },
        'black': { 'path': '/default', 'colormap': 'viridis', 'background_color': 'black', 'width': 1600, 'height': 1200 },
    }
